{"version":3,"sources":["D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login-routing.module.ts","D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login.component.css","D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login.component.html","D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login.component.ts","D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login.module.ts"],"names":[],"mappings":"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","file":"smart-clinic-login.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SmartClinicLoginComponent } from './smart-clinic-login.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n        component: SmartClinicLoginComponent,\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SmartClinicLoginRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login.component.css\n// module id = ../../../../../src/app/header-one-layout/smart-clinic-login/smart-clinic-login.component.css\n// module chunks = smart-clinic-login.module","module.exports = \"<section class=\\\"login-sec\\\">\\n\\n\\t<div class=\\\"container p-0\\\">\\n\\n\\t\\t<div class=\\\"login-panel\\\">\\n\\t\\t\\t<div class=\\\"col-md-offset-1 col-md-10 col-sm-12 col-xs-12\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"login-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h1> Welcome</h1>\\n\\t\\t\\t\\t\\t\\t\\t<h1> to </h1> \\n\\t\\t\\t\\t\\t\\t\\t<h1> doctm </h1> \\n\\t\\t\\t\\t\\t\\t\\t<h1> SmartClinic </h1> \\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<form [formGroup]=\\\"loginForm\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"m-t-40 col-md-6 col-sm-6 col-xs-12\\\"> \\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"login-right newform-margin\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 col-sm-12 col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"fieldDesign\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"field1\\\" type=\\\"text\\\" class=\\\"form-control txtfield\\\" name=\\\"\\\" required=\\\"\\\" [(ngModel)]=\\\"loginData.doctm_clinic_id\\\" [formControl]=\\\"loginForm.controls['doctm_clinic_id']\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color: #FF0000\\\" *ngIf=\\\"!loginForm.controls['doctm_clinic_id'].valid  && ( loginForm.controls['doctm_clinic_id'].touched)\\\">Invalid Id  !!!</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"field1\\\" class=\\\"labelFloat\\\"> User ID (Email) </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 col-sm-12 col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"fieldDesign\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input id=\\\"field2\\\" type=\\\"password\\\" class=\\\"form-control txtfield\\\" name=\\\"\\\" required=\\\"\\\" [(ngModel)]=\\\"loginData.password\\\" [formControl]=\\\"loginForm.controls['password']\\\" />\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"field2\\\" class=\\\"labelFloat\\\"> Password </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 col-sm-12 col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"fieldDesign\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<re-captcha (resolved)=\\\"resolved($event, 'step1')\\\" siteKey=\\\"6LdBQZoUAAAAACukEUlsU0fnfOcFdXQYuyAcpO9J\\\"></re-captcha>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6 col-sm-6 col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"checkbox\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<label><input type=\\\"checkbox\\\" name=\\\"\\\" [(ngModel)]=\\\"remember_me\\\" [formControl]=\\\"loginForm.controls['remember_me']\\\" /> Remember me </label>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-6 col-sm-6 col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<a href=\\\"javascript:void(0)\\\" routerLink=\\\"/header-one-layout/forgot-password/doctor\\\" class=\\\"forgt_pass\\\" > Forgot Password? </a>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-md-12 col-sm-12 col-xs-12 text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-custom\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid || !captcha_step_1\\\" (click)=\\\"LoginDoctor()\\\"> Submit </button>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</form>\\n\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"m-t-40 col-md-12 col-sm-12 col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-sm-6 col-xs-12 dwnld-login\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h1> Download doctm SmartClinic App </h1>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-6 col-sm-6 col-xs-12 googlePlay-login\\\">\\n\\t\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\"> <img src=\\\"./assets/imgs/googlePlay.png\\\" class=\\\"img-responsive\\\" > </a>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login.component.html\n// module id = ../../../../../src/app/header-one-layout/smart-clinic-login/smart-clinic-login.component.html\n// module chunks = smart-clinic-login.module","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserService } from '../../providers/user.service';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment.prod';\nimport * as io from \"socket.io-client\";\n@Component({\n  selector: 'app-smart-clinic-login',\n  templateUrl: './smart-clinic-login.component.html',\n  styleUrls: ['./smart-clinic-login.component.css'],\n  providers: [UserService]\n})\nexport class SmartClinicLoginComponent implements OnInit {\n  loginForm: FormGroup;\t\n  loginData\n  remember_me\n  doctor_id\n  captcha_step_1 = false\n  socket\n  numberOfOnlineUser : Number;\n\n  constructor(private formBuilder:FormBuilder,private toastr: ToastrService,\n    private userService:UserService, private router: Router) { }\n\n  ngOnInit() {\n  \tthis.loginData = {}\n  \tthis.remember_me = false\n  \tthis.loginForm = this.formBuilder.group({\n  \t\t'password': [null, Validators.compose([Validators.required])],\n      'doctm_clinic_id': [null, Validators.compose([Validators.required,Validators.pattern('^[^ ]+[a-zA-Z0-9 ?%!@#$&()-`.+,/\\\"]*')])],\n      'remember_me': [null]\n    })\n    this.socket = io(environment.socket)\n    // this.socket.on('numberOfOnlineUser', (numberOfOnlineUser)=>{\n    //   this.numberOfOnlineUser = numberOfOnlineUser\n      \n    // })\n\n    console.log(this.numberOfOnlineUser)\n  }\n\n  LoginDoctor(){\n    this.userService.LoginDoctor(this.loginData).subscribe(data=>{\n      console.log(data)\n      if(data.response == true){\n        localStorage['isLoggedinDoctor']=1;\n        this.toastr.success(data.message,'Success')   \n        // if(this.remember_me == true){\n          // alert(this.remember_me);\n          console.log(data.data);\n          this.doctor_id = data.data\n          localStorage['doctorDetails']=JSON.stringify(data.data)\n          localStorage['subscription_info']=JSON.stringify(data.data.subscription_id)\n\n          // socket.on('counter', function (data) {\n\n          //   $(\"#counter\").text(data.count);\n\n          // });\n          // this.socket.emit('connect',{\n          //   doctor_id: data._id\n          // })\n          this.socket.emit('login',{\n            doctor_id: this.doctor_id._id,\n            type: 'Doctor'\n          })\n            // } \n            this.router.navigate(['/header-two-layout/dashboard'])\n          }else{\n            this.toastr.error(data.message,'Error')          \n          }\n        },err=>{\n          console.log(err);\n        })\n  }\n  resolved(captchaResponse: string, step) {\n    console.log(`Resolved captcha with response: ${captchaResponse}`);\n    if(step=='step1'){\n      this.captcha_step_1=true;\n    }\n    \n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SmartClinicLoginRoutingModule } from './smart-clinic-login-routing.module';\nimport { SmartClinicLoginComponent } from './smart-clinic-login.component';\n\nimport { FormsModule,FormGroup, FormBuilder, Validators, FormControl,ReactiveFormsModule } from '@angular/forms';\n\nimport { UserService } from '../../providers/user.service';\nimport { RecaptchaModule } from 'ng-recaptcha';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SmartClinicLoginRoutingModule,\n    FormsModule,\n\tReactiveFormsModule,\n  RecaptchaModule.forRoot()\n  ],\n  declarations: [\n  \tSmartClinicLoginComponent,\n  ],\n  providers: [UserService]\n})\nexport class SmartClinicLoginModule { }\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-one-layout/smart-clinic-login/smart-clinic-login.module.ts"],"sourceRoot":"webpack:///"}