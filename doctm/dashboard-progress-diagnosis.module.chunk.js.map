{"version":3,"sources":["D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis-routing.module.ts","D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.component.css","D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.component.html","D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.component.ts","D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAyC;AACc;AACqC;AAC5F,IAAM,MAAM,GAAW;IACvB;QACC,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oHAAmC;KAC9C;CACA,CAAC;AAOF;IAAA;IAAuD,CAAC;IAA3C,uCAAuC;QAJnD,+DAAQ,CAAC;YACT,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;SACvB,CAAC;OACW,uCAAuC,CAAI;IAAD,8CAAC;CAAA;AAAJ;;;;;;;;ACfpD;AACA;;;AAGA;AACA,+BAAgC,uBAAuB,GAAG,OAAO,6BAA6B,GAAG,QAAQ,kBAAkB,GAAG,SAAS,kBAAkB,GAAG,WAAW,gBAAgB,GAAG,gBAAgB,gBAAgB,eAAe,GAAG,YAAY,kBAAkB,sBAAsB,oBAAoB,GAAG,SAAS,kBAAkB,GAAG,kBAAkB,sBAAsB,kBAAkB,kBAAkB,kBAAkB,gBAAgB,0BAA0B,kBAAkB,oCAAoC,uBAAuB,GAAG,uBAAuB,qBAAqB,GAAG,eAAe,qBAAqB,sBAAsB,oBAAoB,mCAAmC,mCAAmC,uBAAuB,GAAG,eAAe,oBAAoB,GAAG,WAAW,2BAA2B,eAAe,uBAAuB,GAAG,aAAa,6BAA6B,GAAG,gBAAgB,gCAAgC,IAAI,4BAA4B,sBAAsB,GAAG,aAAa,iCAAiC,IAAI,gBAAgB,gCAAgC,IAAI,4BAA4B,sBAAsB,GAAG,oCAAoC,oBAAoB,GAAG,WAAW,oBAAoB,GAAG,UAAU,kCAAkC,gCAAgC,yBAAyB,qBAAqB,GAAG,gBAAgB,gCAAgC,wBAAwB,0BAA0B,4BAA4B,kBAAkB,GAAG,iBAAiB,cAAc,GAAG,eAAe,iCAAiC,iCAAiC,4BAA4B,gCAAgC,qCAAqC,6BAA6B,GAAG,uCAAuC,gBAAgB,GAAG,aAAa,sBAAsB,GAAG,kBAAkB,eAAe,uBAAuB,GAAG,oBAAoB,iCAAiC,eAAe,oBAAoB,uBAAuB,yCAAyC,IAAI,2BAA2B,8BAA8B,kBAAkB,qCAAqC,GAAG,WAAW,sBAAsB,wBAAwB,uBAAuB,qCAAqC,sCAAsC,yBAAyB,GAAG,YAAY,qBAAqB,wBAAwB,GAAG,6CAA6C,oBAAoB,GAAG,cAAc,wBAAwB,yBAAyB,uCAAuC,yBAAyB,GAAG,qBAAqB,kBAAkB,yBAAyB,kBAAkB,kBAAkB,gCAAgC,gBAAgB,kBAAkB,QAAQ,kBAAkB,6BAA6B,GAAG,WAAW,2BAA2B,GAAG,aAAa,2BAA2B,GAAG,gBAAgB,uBAAuB,sBAAsB,GAAG,YAAY,6BAA6B,GAAG,sBAAsB,iBAAiB,GAAG,mBAAmB,iBAAiB,GAAG,uBAAuB,iBAAiB,GAAG,aAAa,sCAAsC,GAAG,WAAW,4BAA4B,GAAG,6BAA6B,gDAAgD,gDAAgD,8BAA8B,sBAAsB,GAAG,2BAA2B,4CAA4C,4CAA4C,8BAA8B,sBAAsB,GAAG,aAAa,6BAA6B,GAAG,gBAAgB,gCAAgC,IAAI,4BAA4B,sBAAsB,GAAG,aAAa,iCAAiC,IAAI,gBAAgB,gCAAgC,IAAI,4BAA4B,sBAAsB,GAAG,kBAAkB,uBAAuB,eAAe,iBAAiB,GAAG,gBAAgB,qBAAqB,yBAAyB,GAAG,oCAAoC,iCAAiC;;AAEjlI;;;AAGA;AACA,2C;;;;;;;ACXA,kXAAkX,uKAAuK,qSAAqS,yIAAyI,0IAA0I,8JAA8J,2KAA2K,+JAA+J,qJAAqJ,yOAAyO,gOAAgO,skDAAskD,oDAAoD,aAAa,4DAA4D,iBAAiB,oCAAoC,6BAA6B,KAAK,2BAA2B,kDAAkD,aAAa,4DAA4D,kBAAkB,oCAAoC,6BAA6B,KAAK,2BAA2B,mDAAmD,aAAa,4DAA4D,kBAAkB,oCAAoC,6BAA6B,KAAK,2BAA2B,kDAAkD,aAAa,4DAA4D,kBAAkB,oCAAoC,6BAA6B,KAAK,2BAA2B,iDAAiD,aAAa,4DAA4D,kBAAkB,oCAAoC,6BAA6B,KAAK,2BAA2B,iDAAiD,aAAa,4DAA4D,iBAAiB,oCAAoC,6BAA6B,KAAK,2BAA2B,iDAAiD,aAAa,4DAA4D,mnCAAmnC,uCAAuC,OAAO,mSAAmS,oBAAoB,OAAO,6QAA6Q,kBAAkB,gSAAgS,uCAAuC,mCAAmC,6CAA6C,gBAAgB,+QAA+Q,2CAA2C,kCAAkC,+CAA+C,gBAAgB,6RAA6R,+CAA+C,OAAO,sRAAsR,0BAA0B,OAAO,iCAAiC,gDAAgD,kSAAkS,oBAAoB,OAAO,iCAAiC,kDAAkD,2RAA2R,8GAA8G,OAAO,kTAAkT,0CAA0C,OAAO,kRAAkR,iCAAiC,OAAO,0XAA0X,cAAc,OAAO,aAAa,wCAAwC,ySAAyS,yEAAyE,OAAO,oUAAoU,oBAAoB,OAAO,6QAA6Q,kBAAkB,0lDAA0lD,2BAA2B,OAAO,aAAa,mCAAmC,gSAAgS,2BAA2B,OAAO,aAAa,mCAAmC,0RAA0R,uEAAuE,o6GAAo6G,kBAAkB,+DAA+D,iHAAiH,KAAK,iGAAiG,uBAAuB,uHAAuH,uBAAuB,4FAA4F,sFAAsF,+JAA+J,eAAe,YAAY,6BAA6B,iIAAiI,mBAAmB,sYAAsY,8BAA8B,4FAA4F,iFAAiF,sIAAsI,8BAA8B,6BAA6B,iFAAiF,iOAAiO,yDAAyD,0dAA0d,6BAA6B,iKAAiK,iCAAiC,6JAA6J,6BAA6B,2YAA2Y,4oBAA4oB,qBAAqB,qDAAqD,cAAc,qEAAqE,KAAK,qDAAqD,WAAW,uDAAuD,WAAW,uDAAuD,YAAY,uDAAuD,gBAAgB,uDAAuD,0BAA0B,6dAA6d,qgBAAqgB,qBAAqB,iDAAiD,cAAc,qEAAqE,KAAK,qDAAqD,WAAW,qDAAqD,WAAW,qDAAqD,YAAY,4DAA4D,YAAY,6K;;;;;;;;;;;;;;;;;;;;;;ACAv+tB;AACS;AAChB;AACA;AAM3C;IA+II,qBAAqB;IAErB,6CAAoB,WAAwB,EAAU,QAAkB,EAAU,MAAqB;QAAnF,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAe;QA9EvG,aAAQ,GAAG,IAAI,IAAI,EAAE;QACrB,WAAM,GAAG,IAAI,IAAI,EAAE;QACnB,cAAS,GAAG,IAAI,IAAI,EAAE;QACtB,YAAO,GAAG,IAAI,IAAI,EAAE;QACpB,YAAO,GAAG,IAAI,IAAI,EAAE;QACpB,aAAQ,GAAG;YACP,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,KAAK;YACjB,MAAM,EAAE,aAAa;YACrB,WAAW,EAAE,KAAK;SACrB;QAKD,qBAAqB;QACd,kBAAa,GAAkB,CAAC;gBACnC,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,aAAa;aACvB;SAGA,CAAC;QACK,oBAAe,GAAkB,EAAE,CAAC;QACpC,qBAAgB,GAAQ;YAC3B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACJ,OAAO,EAAE,KAAK;aACjB;SACJ,CAAC;QACK,oBAAe,GAAkB,CAAC;gBACrC,eAAe,EAAE,uBAAuB;gBACxC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,qBAAqB;gBAC3C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aACjD;YACD;gBACI,eAAe,EAAE,oBAAoB;gBACrC,WAAW,EAAE,kBAAkB;gBAC/B,oBAAoB,EAAE,kBAAkB;gBACxC,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,kBAAkB;aAC5C;YACD;gBACI,eAAe,EAAE,uBAAuB;gBACxC,WAAW,EAAE,qBAAqB;gBAClC,oBAAoB,EAAE,qBAAqB;gBAC3C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aACjD;SACA,CAAC;QACK,oBAAe,GAAY,IAAI,CAAC;QAChC,kBAAa,GAAW,MAAM,CAAC;QACtC,sBAAsB;QAEtB,+BAA+B;QACxB,mBAAc,GAAkB,CAAC;gBACpC,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,cAAc;aACxB;SAGA,CAAC;QACK,qBAAgB,GAAkB,EAAE,CAAC;QACrC,sBAAiB,GAAQ;YAC5B,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE;gBACJ,OAAO,EAAE,KAAK;aACjB;SACJ,CAAC;QACK,qBAAgB,GAAY,IAAI,CAAC;QACjC,mBAAc,GAAW,MAAM,CAAC;IAGmE,CAAC;IAE3G,sDAAQ,GAAR;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;QAC3D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,EAAE;QACrB,IAAI,CAAC,SAAS,GAAG,EAAE;QACnB,IAAI,CAAC,UAAU,GAAG,EAAE;IACxB,CAAC;IAED,SAAS;IACF,0DAAY,GAAnB,UAAoB,CAAM;QACtB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAEM,0DAAY,GAAnB,UAAoB,CAAM;QACtB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,yDAAW,GAAX,UAAY,CAAC;QAAb,iBA2aH;QA1aO,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,MAAM;QACV,MAAM,GAAG,EAAE;QACX,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE;QACrB,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe;QACxD,MAAM,CAAC,QAAQ,GAAG,IAAI,IAAI,EAAE;QAC5B,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,kBAAkB,GAAG,CAAC;QAC3B,IAAI,CAAC,sBAAsB,GAAG,CAAC;QAC/B,IAAI,CAAC,wBAAwB,GAAG,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC;QACzB,IAAI,CAAC,wBAAwB,GAAG,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,4BAA4B,GAAG,CAAC;QACrC,IAAI,CAAC,+BAA+B,GAAG,CAAC;QACxC,IAAI,CAAC,mBAAmB,GAAG,CAAC;QAC5B,IAAI,CAAC,sBAAsB,GAAG,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,CAAC;QACzB,IAAI,CAAC,eAAe,GAAG,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,CAAC;QACpB,IAAI,CAAC,0BAA0B,GAAG,CAAC;QACnC,IAAI,CAAC,iBAAiB,GAAG,CAAC;QAC1B,IAAI,CAAC,sBAAsB,GAAG,CAAC;QAC/B,IAAI,CAAC,wBAAwB,GAAG,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC;QAClB,IAAI,CAAC,WAAW,GAAG,CAAC;QACpB,IAAI,CAAC,mBAAmB,GAAG,CAAC;QAC5B,IAAI,CAAC,qBAAqB,GAAG,CAAC;QAC9B,IAAI,CAAC,wBAAwB,GAAG,CAAC;QACjC,IAAI,CAAC,wBAAwB,GAAG,CAAC;QACjC,IAAI,CAAC,sBAAsB,GAAG,CAAC;QAC/B,IAAI,CAAC,kCAAkC,GAAG,CAAC;QAC3C,IAAI,CAAC,kCAAkC,GAAG,CAAC;QAC3C,IAAI,CAAC,gCAAgC,GAAG,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,CAAC;QACnB,IAAI,CAAC,iBAAiB,GAAG,EAAE;QAC3B,IAAI,CAAC,eAAe,GAAG,EAAE;QACzB,IAAI,CAAC,eAAe,GAAG,EAAE;QACzB,IAAI,CAAC,eAAe,GAAG,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAG,CAAC;QAC9B,IAAI,CAAC,uBAAuB,GAAG,CAAC;QAChC,IAAI,CAAC,uBAAuB,GAAG,EAAE;QACjC,IAAI,CAAC,qBAAqB,GAAG,EAAE;QAC/B,IAAI,CAAC,qBAAqB,GAAG,EAAE;QAC/B,IAAI,CAAC,yBAAyB,GAAG,CAAC;QAClC,IAAI,CAAC,2BAA2B,GAAG,CAAC;QACpC,IAAI,CAAC,+BAA+B,GAAG,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,EAAE;QACxB,IAAI,CAAC,wBAAwB,GAAG,EAAE;QAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,UAAU,GAAG,IAAI;QAC5B,CAAC;QACD,qBAAqB;QACjB,qEAAqE;QACrE,uBAAuB;QACnB,sEAAsE;QACtE,uBAAuB;QACnB,uEAAuE;QACvE,uBAAuB;QACnB,uEAAuE;QACvE,uBAAuB;QACnB,uEAAuE;QACvE,uBAAuB;QACnB,6EAA6E;QAC7E,uBAAuB;QACnB,qCAAqC;QACrC,4BAA4B;QAC5B,IAAI;QACJ,qBAAqB;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI;QACnB,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,MAAM;YAC3D,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAClB,IAAI,UAAU,GAAG,EAAE;gBACnB,IAAI,WAAW,GAAG,EAAE;gBACpB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC3C,EAAE,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,EAAC;wBAC/B,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC;oBAAA,IAAI,EAAC;wBACF,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACrC,CAAC;gBACL,CAAC;gBACD,IAAI,SAAS,GAAG,EAAE;gBAClB,IAAI,QAAQ,GAAG,EAAE;gBACjB,IAAI,SAAS,GAAG,EAAE;gBAClB,IAAI,QAAQ,GAAG,EAAE;gBACjB,IAAI,GAAG,GAAG,CAAC;gBACX,IAAI,WAAW;gBACf,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW;gBACrC,IAAI,kBAAkB,GAAG,CAAC;gBAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC1C,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM;oBACtC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBACzD,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;4BACpD,KAAI,CAAC,wBAAwB,EAAE;4BAC/B,KAAI,CAAC,kBAAkB,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB;4BAE3E,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC;4BAChE,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;4BAC7F,kBAAkB,EAAE;4BACpB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,wBAAwB,IAAI,MAAM,CAAC,CAAC,CAAC;gCACnE,KAAI,CAAC,eAAe,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB;gCACxE,KAAI,CAAC,sBAAsB,EAAE;4BACjC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACJ,KAAI,CAAC,iBAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB;gCAC1E,KAAI,CAAC,wBAAwB,EAAE;4BACnC,CAAC;4BACD,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;gCACjD,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG;4BACzD,CAAC;4BACD,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC;gCACvE,KAAI,CAAC,UAAU,EAAE;4BACrB,CAAC;wBACL,CAAC;oBACL,CAAC;oBACD,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC;gBACpD,CAAC;gBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACzC,KAAI,CAAC,kBAAkB,GAAG,UAAU,CAAC,MAAM;oBAC3C,KAAI,CAAC,gBAAgB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY;oBACnD,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;oBACtE,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;oBAC1C,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;oBAC7E,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;oBAChC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC;wBACvC,KAAI,CAAC,qBAAqB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY;wBACxD,KAAI,CAAC,sBAAsB,EAAE;oBACjC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,KAAI,CAAC,uBAAuB,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY;wBAC1D,KAAI,CAAC,wBAAwB,EAAE;oBACnC,CAAC;gBACL,CAAC;gBACD,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;gBACrE,KAAI,CAAC,+BAA+B,GAAG,CAAC,KAAI,CAAC,kBAAkB,GAAC,KAAI,CAAC,wBAAwB,CAAC;gBAC9F,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;gBAC1D,KAAI,CAAC,sBAAsB,GAAG,CAAC,KAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC;gBAClH,KAAI,CAAC,wBAAwB,GAAG,CAAC,KAAI,CAAC,wBAAwB,GAAG,GAAG,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC;gBACtH,KAAI,CAAC,yBAAyB,GAAG,CAAC,KAAI,CAAC,wBAAwB,GAAG,GAAG,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC;gBACvH,KAAI,CAAC,2BAA2B,GAAG,CAAC,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC,GAAG,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,CAAC;gBACnH,KAAI,CAAC,4BAA4B,GAAG,CAAC,KAAI,CAAC,kBAAkB,GAAG,CAAC,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,GAAG;gBACvH,KAAI,CAAC,+BAA+B,GAAG,CAAC,KAAI,CAAC,gBAAgB,GAAG,CAAC,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,GAAG,GAAG;gBACxH,KAAI,CAAC,mBAAmB,GAAG,CAAC,KAAI,CAAC,wBAAwB,GAAG,CAAC,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,kBAAkB,CAAC,CAAC,GAAG,GAAG;gBAC5H,KAAI,CAAC,sBAAsB,GAAG,CAAC,KAAI,CAAC,kBAAkB,GAAG,CAAC,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,kBAAkB,CAAC,CAAC,GAAG,GAAG;gBACzH,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI;gBAC5B,KAAI,CAAC,UAAU,GAAG,UAAU;gBAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC7C,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,EAAE;oBACjC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,EAAE;oBAClC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,CAAC;oBACxC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,CAAC;oBACpC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC;oBACrC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC5D,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;4BAC/C,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB;4BAEjI,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBACvE,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;wBACxE,CAAC;oBACL,CAAC;oBACD,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM;oBAClE,iIAAiI;oBACjI,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;wBAC1C,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBAC3I,CAAC;gBACL,CAAC;gBAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC7C,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,eAAe,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,KAAI,CAAC,wBAAwB;oBAC/G,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,kBAAkB,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM;oBACxF,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM;oBACvE,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBACxF,CAAC;gBACD,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,OAAO,CAAC,CAAC,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,GAAG,KAAI,CAAC,kBAAkB,CAAC;gBACtF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACzC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY;gBAC9E,CAAC;gBACD,KAAI,CAAC,0BAA0B,GAAG,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,CAAC;gBAC7F,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,MAAM,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC/C,IAAI,OAAO,GAAG,KAAK;wBACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC7C,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gCACzE,OAAO,GAAG,IAAI;gCACd,KAAK;4BACT,CAAC;wBACL,CAAC;wBACD,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC;4BACnB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gCAChB,GAAG,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG;gCAC5B,WAAW,EAAE,EAAE;gCACf,UAAU,EAAE,EAAE;gCACd,kBAAkB,EAAE,CAAC;gCACrB,UAAU,EAAE,CAAC;gCACb,cAAc,EAAE,CAAC;6BACpB,CAAC;wBACN,CAAC;oBACL,CAAC;gBACL,CAAC;gBACD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM;gBAC1D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC7C,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,yBAAyB,GAAG,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBAC9J,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,gBAAgB,GAAG,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC5I,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,mBAAmB,GAAG,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,KAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC;gBACpK,CAAC;gBACD,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACnH,KAAI,CAAC,sBAAsB,GAAG,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC;gBACvI,KAAI,CAAC,wBAAwB,GAAG,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBAC7G,KAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,0BAA0B,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;gBACpG,IAAI,SAAS,GAAG,EAAE;gBAClB,IAAI,WAAW,GAAG,EAAE;gBACpB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACvC,IAAI,OAAO,GAAG,KAAK;oBACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC1C,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAChC,OAAO,GAAG,IAAI;4BACd,KAAK;wBACT,CAAC;oBACL,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC;wBACnB,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACjC,CAAC;gBACL,CAAC;gBACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC1C,IAAI,iBAAiB,GAAW,CAAC;oBACjC,IAAI,mBAAmB,GAAW,CAAC;oBACnC,IAAI,iBAAiB,GAAW,CAAC;oBACjC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC7C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC5D,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;gCACvD,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;oCACtG,iBAAiB,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB;oCACxE,iBAAiB,EAAE;gCACvB,CAAC;4BACL,CAAC;wBACL,CAAC;oBACL,CAAC;oBACD,KAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBACpD,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC;oBAC9C,IAAI,mBAAmB,GAAW,CAAC;oBACnC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC9C,gDAAgD;wBAChD,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;4BACxF,mBAAmB,IAAI,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY;4BACtD,mBAAmB,EAAE;wBACzB,CAAC;oBACL,CAAC;oBACD,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,mBAAmB,CAAC;oBACpD,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,mBAAmB,CAAC;oBAC9C,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;oBAClE,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;oBACxE,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,KAAI,CAAC,eAAe,CAAC;gBACrD,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,KAAI,CAAC,eAAe,CAAC;gBACrD,IAAI,WAAW,GAAG,CAAC,CAAC;gBACpB,WAAW,GAAG,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,IAAI,KAAI,CAAC,YAAY,EAAtB,CAAsB,CAAC,CAAC;gBAC1E,KAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC,WAAW,CAAC;gBAC/C,IAAI,WAAW,GAAG,CAAC,CAAC;gBACpB,WAAW,GAAG,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,IAAI,KAAI,CAAC,YAAY,EAAtB,CAAsB,CAAC,CAAC;gBAC1E,KAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC,WAAW,CAAC;gBAC/C,4CAA4C;gBAC5C,KAAI,CAAC,aAAa,GAAG,CAAC;wBAClB,IAAI,EAAE,KAAI,CAAC,eAAe;wBAC1B,KAAK,EAAE,aAAa;qBACvB;iBACA,CAAC;gBACF,IAAI,cAAc,GAAG,EAAE;gBACvB,KAAI,CAAC,UAAU,GAAG,SAAS;gBAC3B,KAAI,CAAC,eAAe,GAAG,KAAI,CAAC,UAAU;gBACtC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBACxC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACrC,CAAC;gBACD,4CAA4C;gBAE5C,8CAA8C;gBAC9C,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,KAAI,CAAC,qBAAqB,CAAC;gBAC5D,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,EAAQ,KAAI,CAAC,qBAAqB,CAAC;gBAC5D,IAAI,WAAW,GAAG,CAAC,CAAC;gBACpB,WAAW,GAAG,KAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,IAAI,KAAI,CAAC,aAAa,EAAvB,CAAuB,CAAC,CAAC;gBACjF,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC,WAAW,CAAC;gBAC1C,IAAI,WAAW,GAAG,CAAC,CAAC;gBACpB,WAAW,GAAG,KAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,WAAC,IAAI,QAAC,IAAI,KAAI,CAAC,aAAa,EAAvB,CAAuB,CAAC,CAAC;gBACjF,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC,WAAW,CAAC;gBAC1C,KAAI,CAAC,cAAc,GAAG,CAAC;wBACnB,IAAI,EAAE,KAAI,CAAC,qBAAqB,EAAC,KAAK,EAAE,cAAc;qBAAC;iBACtD,CAAC;gBACF,KAAI,CAAC,gBAAgB,GAAG,SAAS;gBACjC,kEAAkE;gBAClE,KAAI,CAAC,SAAS,CAAC,SAAS,EAAE,KAAI,CAAC,eAAe,CAAC;gBAC/C,KAAI,CAAC,UAAU,CAAC,cAAc,EAAE,KAAI,CAAC,qBAAqB,CAAC,CAAC;gBAC5D,iEAAiE;gBACjE,4DAA4D;gBAC5D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC3C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBACpD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC9D,IAAI,OAAO,GAAG,KAAK;4BACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAClD,EAAE,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI;oCAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAE,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;oCAClE,OAAO,GAAG,IAAI;gCACtB,CAAC;4BACL,CAAC;4BACD,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC;gCACnB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;oCACrB,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oCACrC,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oCACzC,KAAK,EAAC,CAAC;oCACP,SAAS,EAAE,CAAC;oCACZ,UAAU,EAAE,CAAC;iCAChB,CAAC;4BACN,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;gBACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAClD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC3C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACpD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC9D,EAAE,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI;oCAC7D,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAE,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;oCAClE,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE;oCACtC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,IAAE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oCAChE,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,GAAC,GAAG,CAAC,GAAC,CAAC,KAAI,CAAC,gBAAgB,GAAC,KAAI,CAAC,kBAAkB,CAAC;gCAC1H,CAAC;4BACL,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,cAAc,CAAC;gBAChC,2DAA2D;gBAE3D,2DAA2D;gBAE3D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC1C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBACzD,IAAI,QAAQ,GAAG,KAAK;wBACpB,IAAI,MAAM,GAAG,CAAC;wBACd,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BAC1F,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAG,aAAa;gCACnF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAK;gCAC7E,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAK;gCAC7E,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM;gCAC9E,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,cAAc;gCACtF,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAK,CAAC,EAAC;gCAC/E,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCACtG,IAAI,OAAO,GAAG,KAAK;oCACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wCAC5D,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI;4CAC5G,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,KAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;4CAC5H,MAAM,EAAE;4CACZ,OAAO,GAAG,IAAI;4CACd,KAAK,CAAC;wCACV,CAAC;oCACL,CAAC;oCACD,EAAE,EAAC,OAAO,IAAI,KAAK,CAAC,EAAC;wCACjB,KAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;4CAC/B,IAAI,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI;4CACzE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK;4CACrF,KAAK,EAAC,MAAM,GAAG,CAAC;yCACnB,CAAC;oCACN,CAAC;gCACL,CAAC;4BACL,CAAC;4BAAA,IAAI,EAAC;gCACF,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oCAC5D,EAAE,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI;wCAC5G,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,KAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;wCACjH,MAAM,EAAE;wCACZ,OAAO,GAAG,IAAI;wCACd,KAAK,CAAC;oCACV,CAAC;gCACL,CAAC;gCACD,EAAE,EAAC,OAAO,IAAI,KAAK,CAAC,EAAC;oCACjB,KAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;wCAC/B,IAAI,EAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI;wCACzE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,MAAM;wCAC5E,KAAK,EAAC,MAAM,GAAG,CAAC;qCACnB,CAAC;gCACN,CAAC;4BACL,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;gBACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5D,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;wBAC3C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACpD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC9D,EAAE,EAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI;oCACvE,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAE,KAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;oCAC5E,KAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,KAAK,IAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;gCACtF,CAAC;4BACL,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,wBAAwB,CAAC;gBAG1C,2DAA2D;YAC/D,CAAC;YACD,KAAI,CAAC,cAAc,EAAE;YACrB,KAAI,CAAC,OAAO,GAAG,KAAK;QACxB,CAAC,EAAE,aAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QACpB,CAAC,CAAC;IACtB,CAAC;IACD,4DAAc,GAAd;QACI,IAAI,CAAC,iBAAiB,GAAG,EAAE;QAC3B,IAAI,CAAC,kBAAkB,GAAG,EAAE;QAC5B,IAAI,CAAC,YAAY,GAAG,EAAE;QACtB,IAAI,eAAe,GAAG,EAAE;QACxB,IAAI,EAAE,GAAG,eAAe,CAAC,CAAC,CAAC;QAC3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACpE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9E,eAAe,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAC,EAAE,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAClL,eAAe,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAC,EAAE,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAE;gBAC/K,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAC,EAAE,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EACxK,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAC,EAAE,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EACxJ,CAAC,CAAC;YACV,CAAC;QACL,CAAC;QACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAChD,IAAI,WAAW,GAAG,CAAC;YACnB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC5D,EAAE,EAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,GAAC,EAAE,GAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBAC9L,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,GAAC,EAAE,GAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,YAAY,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC;wBACpM,WAAW,GAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,kBAAkB;oBACvE,CAAC;gBACL,CAAC;YACL,CAAC;YACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9C,EAAE,EAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,GAAC,EAAE,GAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;oBAClK,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,GAAC,EAAE,GAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,YAAY,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC;oBACxK,WAAW,GAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY;gBACnD,CAAC;YACL,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC;QACzC,CAAC;QACD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAChD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC;QAChH,CAAC;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,kBAAkB,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG;YACrB,EAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,EAAE,OAAO,EAAC;SAC9C;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,iBAAiB;IAC7C,CAAC;IACD,wDAAU,GAAV,UAAW,KAAK,EAAE,GAAG,EAAE,IAAI;QACvB,EAAE,CAAC,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,GAAG,CAAC,CAAC;QACb,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACX,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,YAAY;IAC5B,CAAC;IACD,wDAAU,GAAV,UAAW,CAAC,EAAE,CAAC;QACX,IAAI,QAAQ,CAAC;QACb,GAAG,CAAC;YACA,QAAQ,GAAG,KAAK,CAAC;YACjB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;oBAChB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;oBAChB,QAAQ,GAAG,IAAI,CAAC;gBACpB,CAAC;YACL,CAAC;QACL,CAAC,QAAQ,QAAQ,EAAE;QAEnB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QAEd,IAAI,aAAa,GAAG,EAAE;QACtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAChC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;QACnE,CAAC;QACD,IAAI,CAAC,gBAAgB,GAAG,aAAa;IACzC,CAAC;IACD,uDAAS,GAAT,UAAU,CAAC,EAAE,CAAC;QACV,IAAI,OAAO,CAAC;QACZ,GAAG,CAAC;YACA,OAAO,GAAG,KAAK,CAAC;YAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACpC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;oBAChB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBAChB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;oBAChB,OAAO,GAAG,IAAI,CAAC;gBACnB,CAAC;YACL,CAAC;QACL,CAAC,QAAQ,OAAO,EAAE;QAClB,MAAM;QACN,IAAI,YAAY,GAAG,EAAE;QACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAChC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;QAClE,CAAC;QACD,IAAI,CAAC,eAAe,GAAG,YAAY;IACvC,CAAC;IACD,SAAS;IACL,4BAA4B;IAC5B,4BAA4B;IAC5B,kCAAkC;IAClC,sCAAsC;IACtC,wCAAwC;IACxC,kCAAkC;IAClC,gCAAgC;IAChC,wCAAwC;IACxC,4BAA4B;IAC5B,4BAA4B;IAC5B,4CAA4C;IAC5C,+CAA+C;IAC/C,mCAAmC;IACnC,sCAAsC;IACtC,kCAAkC;IAClC,0BAA0B;IAC1B,gCAAgC;IAChC,+BAA+B;IAC/B,iCAAiC;IACjC,gCAAgC;IAChC,2BAA2B;IAC3B,0CAA0C;IAC1C,iCAAiC;IACjC,sCAAsC;IACtC,wCAAwC;IACxC,6BAA6B;IAC7B,iCAAiC;IACjC,iCAAiC;IACjC,iCAAiC;IACjC,6BAA6B;IAC7B,6BAA6B;IAC7B,4BAA4B;IAC5B,4BAA4B;IAC5B,wBAAwB;IACxB,yBAAyB;IACzB,2BAA2B;IAC3B,mCAAmC;IACnC,qCAAqC;IACrC,wCAAwC;IACxC,wCAAwC;IACxC,sCAAsC;IACtC,kDAAkD;IAClD,kDAAkD;IAClD,gDAAgD;IAChD,sBAAsB;IACtB,0BAA0B;IAC1B,kCAAkC;IAClC,gCAAgC;IAChC,gCAAgC;IAChC,+BAA+B;IAC/B,iCAAiC;IACjC,qCAAqC;IACrC,uCAAuC;IACvC,wCAAwC;IACxC,sCAAsC;IACtC,sCAAsC;IACtC,yCAAyC;IACzC,2CAA2C;IAC3C,iBAAiB;IACjB,kBAAkB;IAClB,yCAAyC;IACzC,qCAAqC;IACrC,+DAA+D;IAC/D,0BAA0B;IAC1B,wGAAwG;IACpG,kEAAkE;IAClE,iBAAiB;IACjB,QAAQ;IACR,0GAA0G;IACtG,kEAAkE;IAClE,iBAAiB;IACjB,QAAQ;IACR,0BAA0B;IAC1B,4EAA4E;IACxE,8BAA8B;IAC9B,iCAAiC;IAC7B,kCAAkC;IAClC,mCAAmC;IACnC,8DAA8D;IAC1D,sDAAsD;IAClD,uDAAuD;IACvD,yBAAyB;IACrB,wDAAwD;IACxD,oBAAoB;IACpB,gBAAgB;IAChB,iCAAiC;IACjC,gCAAgC;IAChC,iCAAiC;IACjC,gCAAgC;IAChC,0BAA0B;IAC1B,8BAA8B;IAC9B,oDAAoD;IACpD,yCAAyC;IACzC,6DAA6D;IACzD,yDAAyD;IACzD,gFAAgF;IAC5E,+EAA+E;IAC3E,0DAA0D;IAC1D,sGAAsG;IACtG,2FAA2F;IAC3F,wHAAwH;IACxH,+CAA+C;IAC/C,kGAAkG;IAC9F,uGAAuG;IACvG,4DAA4D;IAC5D,mCAAmC;IAC/B,yGAAyG;IACzG,8DAA8D;IAC9D,4BAA4B;IAC5B,gFAAgF;IAC5E,oFAAoF;IACpF,4BAA4B;IAC5B,sGAAsG;IAClG,gDAAgD;IAChD,4BAA4B;IAC5B,wBAAwB;IACxB,oBAAoB;IACpB,mEAAmE;IACnE,gBAAgB;IAChB,4DAA4D;IACxD,8DAA8D;IAC9D,sEAAsE;IACtE,yFAAyF;IACzF,6DAA6D;IAC7D,gGAAgG;IAChG,mDAAmD;IACnD,8DAA8D;IAC1D,+EAA+E;IAC/E,oDAAoD;IACpD,2BAA2B;IACvB,iFAAiF;IACjF,sDAAsD;IACtD,oBAAoB;IACpB,gBAAgB;IAChB,oFAAoF;IACpF,yEAAyE;IACzE,iIAAiI;IACjI,qIAAqI;IACrI,sIAAsI;IACtI,kIAAkI;IAClI,sIAAsI;IACtI,uIAAuI;IACvI,2IAA2I;IAC3I,wIAAwI;IACxI,2CAA2C;IAC3C,2CAA2C;IAC3C,gEAAgE;IAC5D,oDAAoD;IACpD,qDAAqD;IACrD,2DAA2D;IAC3D,uDAAuD;IACvD,wDAAwD;IACxD,mFAAmF;IAC/E,0EAA0E;IACtE,4JAA4J;IAE5J,8FAA8F;IAC9F,+BAA+B;IAC3B,+FAA+F;IAC/F,wBAAwB;IACxB,oBAAoB;IACpB,qFAAqF;IACrF,oJAAoJ;IACpJ,iEAAiE;IAC7D,8JAA8J;IAC9J,oBAAoB;IACpB,gBAAgB;IAEhB,gEAAgE;IAC5D,kIAAkI;IAClI,2GAA2G;IAC3G,0FAA0F;IAC1F,uGAAuG;IACvG,gBAAgB;IAChB,qGAAqG;IACrG,4DAA4D;IACxD,6FAA6F;IAC7F,gBAAgB;IAChB,4GAA4G;IAC5G,qEAAqE;IACjE,sEAAsE;IAClE,0CAA0C;IAC1C,wEAAwE;IACpE,wGAAwG;IACpG,6CAA6C;IAC7C,oCAAoC;IACpC,4BAA4B;IAC5B,wBAAwB;IACxB,8CAA8C;IAC1C,gDAAgD;IAC5C,4DAA4D;IAC5D,+CAA+C;IAC/C,8CAA8C;IAC9C,qDAAqD;IACrD,6CAA6C;IAC7C,gDAAgD;IAChD,6BAA6B;IAC7B,wBAAwB;IACxB,oBAAoB;IACpB,gBAAgB;IAChB,yEAAyE;IACzE,gEAAgE;IAC5D,iLAAiL;IACjL,+JAA+J;IAC/J,mLAAmL;IACnL,gBAAgB;IAChB,kIAAkI;IAClI,sJAAsJ;IACtJ,4HAA4H;IAC5H,mHAAmH;IACnH,iCAAiC;IACjC,mCAAmC;IACnC,4CAA4C;IAC5C,0DAA0D;IACtD,sCAAsC;IACtC,iEAAiE;IAC7D,2DAA2D;IACvD,yCAAyC;IACzC,gCAAgC;IAChC,wBAAwB;IACxB,oBAAoB;IACpB,0CAA0C;IACtC,oDAAoD;IACpD,oBAAoB;IACpB,gBAAgB;IAChB,6DAA6D;IACzD,oDAAoD;IACpD,sDAAsD;IACtD,oDAAoD;IACpD,oEAAoE;IAChE,uFAAuF;IACnF,sFAAsF;IAClF,yIAAyI;IACrI,2GAA2G;IAC3G,sDAAsD;IACtD,gCAAgC;IAChC,4BAA4B;IAC5B,wBAAwB;IACxB,oBAAoB;IACpB,uEAAuE;IACvE,iEAAiE;IACjE,sDAAsD;IACtD,qEAAqE;IACjE,uEAAuE;IACvE,mHAAmH;IAC/G,iFAAiF;IACjF,gDAAgD;IAChD,wBAAwB;IACxB,oBAAoB;IACpB,uEAAuE;IACvE,iEAAiE;IACjE,qFAAqF;IACrF,2FAA2F;IAC3F,iDAAiD;IACjD,gBAAgB;IAChB,oEAAoE;IACpE,oEAAoE;IACpE,mCAAmC;IACnC,yFAAyF;IACzF,8DAA8D;IAC9D,mCAAmC;IACnC,yFAAyF;IACzF,8DAA8D;IAC9D,2DAA2D;IAC3D,sCAAsC;IAClC,kDAAkD;IAClD,2CAA2C;IAC3C,qBAAqB;IACrB,iBAAiB;IACjB,sCAAsC;IACtC,0CAA0C;IAC1C,qDAAqD;IACrD,2DAA2D;IACvD,oDAAoD;IACpD,gBAAgB;IAChB,2DAA2D;IAE3D,6DAA6D;IAC7D,2EAA2E;IAC3E,2EAA2E;IAC3E,mCAAmC;IACnC,gGAAgG;IAChG,yDAAyD;IACzD,mCAAmC;IACnC,gGAAgG;IAChG,yDAAyD;IACzD,uCAAuC;IACnC,2EAA2E;IAC3E,iBAAiB;IACjB,gDAAgD;IAChD,iFAAiF;IACjF,8DAA8D;IAC9D,2EAA2E;IAC3E,gFAAgF;IAChF,YAAY;IACZ,+BAA+B;IAC/B,kBAAkB;IACd,2BAA2B;IAC3B,SAAS;IACT,IAAI;IACJ,uDAAS,GAAT,UAAU,GAAG;QACT,EAAE,EAAC,GAAG,IAAE,CAAC,CAAC,EAAC;YACP,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,eAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,GAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,EAA3C,CAA2C,CAAC,CAAC;QACpF,CAAC;QAAA,IAAI,EAAC;YACF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,eAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAnC,CAAmC,CAAC,CAAC;QAC5E,CAAC;IACL,CAAC;IACD,sDAAQ,GAAR,UAAS,CAAC;QACN,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,QAAQ;QACnB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,WAAW;QACtB,CAAC;IAEL,CAAC;IACD,qDAAO,GAAP,UAAQ,IAAI;QACR,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,CAAC;QACZ,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI;QACf,CAAC;IACL,CAAC;IAED,2DAAa,GAAb,UAAc,EAAE;QACZ,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;YAC3C,CAAC;QACL,CAAC;IACL,CAAC;IACD,wDAAU,GAAV,UAAW,IAAI;QACX,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,CAAC;QACZ,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,CAAC,IAAI;QACf,CAAC;IACL,CAAC;IAED,2DAAa,GAAb,UAAc,IAAI,EAAE,KAAK;QACrB,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,yDAAW,GAAX,UAAY,IAAI;QACZ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED,yDAAW,GAAX,UAAY,IAAI,EAAE,CAAC;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,KAAK;QAChB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,WAAW;YACtB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,eAAe;YAC1B,CAAC;QACL,CAAC;IACL,CAAC;IAriChL,mCAAmC;QAL/C,gEAAS,CAAC;YACP,QAAQ,EAAE,kCAAkC;;;SAG/C,CAAC;yCAkJmC,4EAAW,EAAoB,yDAAQ,EAAkB,iEAAa;OAjJ9F,mCAAmC,CAwiCyI;IAAD,0CAAC;CAAA;AAxiCzI;;;;;;;;;;;;;;;;;;;;;;;;ACTP;AACM;AAC+C;AACU;AAC9D;AAC4B;AAUtE;IAAA;IAAgD,CAAC;IAApC,gCAAgC;QAT5C,+DAAQ,CAAC;YACT,OAAO,EAAE;gBACT,6DAAY;gBACZ,6HAAuC;gBACvC,wDAAY;gBACZ,4FAA2B;aAC1B;YACD,YAAY,EAAE,CAAC,oHAAmC,CAAC;SACnD,CAAC;OACW,gCAAgC,CAAI;IAAD,uCAAC;CAAA;AAAJ","file":"dashboard-progress-diagnosis.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardProgressDiagnosisComponent} from './dashboard-progress-diagnosis.component'\nconst routes: Routes = [\n{\n\tpath: '',\n\tcomponent: DashboardProgressDiagnosisComponent\n}\n];\n\n\n@NgModule({\n\timports: [RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class DashboardProgressDiagnosisRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tb-1{\\n\\tmargin-bottom: 0px;\\n}\\n.evn{\\n\\tbackground-color:#eff3ef;\\n}\\n.grin{\\n\\tcolor:#38af13;\\n}\\n.red-u{\\n\\tcolor:#ff0000;\\n}\\n.tb-1 h4{\\n\\tmargin: 0px;\\n}\\n.wrap-canavas{\\n\\tfloat: none;\\n\\twidth:100%;\\n}\\n.clr-blue{\\n\\tcolor:#00b0f0;\\n\\tfont-weight: bold;\\n\\tcursor: pointer;\\n}\\n.blu-2{\\n\\tcolor:#1639bf;\\n}\\n.footer-cstm-an{\\n    position: fixed;\\n    z-index: 99;\\n    float: left;\\n    width: 100%;\\n    bottom: 0;\\n    background: #00b0f0;\\n    color: #fff;\\n    border-top: 1px solid #d6d6d6;\\n    padding-top: 8px;\\n}\\n.cus-content-wrapper{\\n\\tpadding-top: 0px;\\n}\\n.wrap-height{\\n\\tmin-height:250px;\\n\\tmax-height: 250px;\\n\\tpadding:0px 8px;\\n\\tborder-left: 1px solid #dcdcdc;\\n\\tborder-right:1px solid #dcdcdc;\\n\\toverflow-x: hidden;\\n}\\n.mt-table h3{\\n\\tmargin-top: 0px;\\n}\\n.cstm-tr{\\n\\tbackground-color: #000;\\n\\tcolor:#fff;\\n\\ttext-align: center;\\n}\\n.cstm-tr-2{\\n\\tbackground-color:#d7e4e3;\\n}\\n.cstm-tr-2 td{\\n\\tborder-right:1px solid #bbb; \\n}\\n.cstm-tr-2 td:last-child {\\n border-right: none;\\n}\\n.cstm-tr-3{\\n\\tborder-bottom:1px solid #bbb; \\n}\\n.cstm-tr-3 td{\\n\\tborder-right:1px solid #bbb; \\n}\\n.cstm-tr-3 td:last-child {\\n border-right: none;\\n}\\n.cus-sidebar-wrapper .cus-sidebar{\\n\\theight: initial;\\n}\\n.cstm-mg{\\n\\tmargin-top: 5px;\\n}\\n.btn-go{\\n\\tbackground-color: transparent;\\n    border: 1px solid #002160;\\n    margin-bottom: 5px;\\n    min-width: 62%;\\n}\\n.btn-go:hover{\\n    -webkit-transition: 300ms;\\n    transition: 300ms;\\n    background: #98C74F;\\n    border-color: #98C74F;\\n    color: #fff;\\n}\\n/*.cus-content{\\n\\tz-index:1;\\n}*/\\n.li-cstm a{\\n\\ttext-align: center!important;\\n    background: #000!important;\\n    color: #fff!important;\\n    font-size: 16px!important;\\n    font-weight: inherit!important;\\n    padding: 6px!important;\\n}\\n/*karam @29-1-2018*/\\n.side-bar-cstm{\\n\\tz-index: 99;\\n}\\n.res-tab-2{\\n\\tmax-height: 200px;\\n}\\n.cstm-ul-new li{\\n\\twidth:100%;\\n\\ttext-align: center;\\n}\\n.cstm-ul-new li a{\\n\\tbackground-color:transparent;\\n\\tcolor:#000;\\n\\tcursor: pointer;\\n\\tborder-radius: 0px;\\n\\tborder-bottom: 2px solid transparent; \\n}\\n.cstm-ul-new li.active a{\\n\\tbackground-color: #e0e0e0;\\n    color: #000;\\n\\tborder-bottom: 2px solid #00b0f0;\\n}\\n.tab-new{\\n\\tmin-height: 450px;\\n    max-height: 450px;\\n    padding: 0px 8px;\\n    border-left: 1px solid #dcdcdc;\\n    border-right: 1px solid #dcdcdc;\\n    overflow-x: hidden;\\n}\\n.clr-blue{\\n    color: #00b0f0;\\n    font-weight: bold;\\n}\\n/*karam@30-jan-2019*/\\n.tab-new-cstm tr td{\\n\\tfont-size: 10px;\\n}\\n.brder-cstm{\\n\\tpadding-bottom: 1px;\\n    margin-bottom: 6px;\\n    border-bottom: 1px solid #a7a7a7;\\n    position: relative;\\n}\\n.brder-cstm::after{\\n\\tcontent: \\\"\\\";\\n    position: absolute;\\n    height: 6px;\\n    width: 12px;\\n    background-color: #ffffff;\\n    top: 41px;\\n    right: -3px;\\n\\t \\n}\\n.cus-sidebar ul{\\n\\tborder:1px solid #a7a7a7;\\n}\\n.can-vas{\\n\\theight:227px!important;\\n}\\n.can-vas-1{\\n\\theight:210px!important;\\n}\\n.cstm-heading{\\n  text-align: center;\\n  font-weight: bold;\\n}\\n.xs-small{\\n\\tfont-size: 75%!important;\\n}\\n.cstm-tab-new tr td{\\n\\tpadding: 5px;\\n}\\n.new-table tr td{\\n\\tpadding: 8px;\\n}\\n.new-table-two tr td{\\n\\tpadding: 7px;\\n}\\n.brdr-rght{\\n    border-right: 1px solid #bfc4cb;\\n}\\n.can-vas{\\n\\theight: 227px!important;\\n}\\n.modal.fade .modal-dialog {\\n  -webkit-transform: translate3d(0, 100vh, 0);\\n          transform: translate3d(0, 100vh, 0);\\n  -webkit-transition: 700ms;\\n  transition: 700ms;\\n}\\n.modal.in .modal-dialog {\\n  -webkit-transform: translate3d(0, 0, 0);\\n          transform: translate3d(0, 0, 0);\\n  -webkit-transition: 700ms;\\n  transition: 700ms;\\n}\\n.cstm-tr-2{\\n\\tbackground-color:#d7e4e3;\\n}\\n.cstm-tr-2 td{\\n\\tborder-right:1px solid #bbb; \\n}\\n.cstm-tr-2 td:last-child {\\n border-right: none;\\n}\\n.cstm-tr-3{\\n\\tborder-bottom:1px solid #bbb; \\n}\\n.cstm-tr-3 td{\\n\\tborder-right:1px solid #bbb; \\n}\\n.cstm-tr-3 td:last-child {\\n border-right: none;\\n}\\n/*.cstm-md-bdy {\\n\\tposition: absolute;\\n\\ttop: -30px;\\n    right: 8px;\\n}*/\\n.modal-body{\\n\\tpadding-top: 1px;\\n\\tpadding-bottom: -1px;\\n}\\n.cus-content-wrapper .cus-content{\\n\\tmargin-left: 0px!important\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.component.css\n// module id = ../../../../../src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.component.css\n// module chunks = dashboard-progress-diagnosis.module","module.exports = \"<div class=\\\"loader-box\\\" *ngIf=\\\"loading\\\">\\n\\t<img src=\\\"./assets/imgs/load.gif\\\" />\\n</div>\\n<div class=\\\"analytics-sec\\\">\\n\\t\\n\\t<div class=\\\"ipd-deatil-sec\\\">\\n\\t<!-- \\t<div class=\\\"md-tab\\\">\\n\\t      \\t\\n\\t      \\t<ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n\\t          \\t<li role=\\\"presentation\\\" class=\\\"active\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-consultation-prescription\\\"> Consultation </a></li>\\n\\t          \\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-pharmacy-detail\\\"> Clinic Services </a></li>\\n\\t      \\t</ul>\\n\\t    </div>\\n\\t-->\\n\\t<div class=\\\"inner-tab\\\">\\n\\t\\t<!-- Nav tabs -->\\n\\t\\t<ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li role=\\\"presentation\\\" ><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress\\\"> Patient </a></li>\\n\\t\\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-time\\\"> Time</a></li>\\n\\t\\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-prescription\\\">Prescription</a></li>\\n\\t\\t\\t\\t<!--li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-pharmacy\\\"> Pharmacy</a></li>\\n\\t          \\t<li role=\\\"presentation\\\" class=\\\"active\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-diagnosis\\\"> Diagnostics </a></li>\\n\\t          \\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-ipd\\\"> IPD </a></li-->\\n\\t          \\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-pharmacy\\\" *ngIf=\\\"doctorData.clinic_services.Clinic_Pharmacy==true\\\"> Pharmacy</a></li>\\n\\t          \\t\\t<li role=\\\"presentation\\\"  class=\\\"active\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-diagnosis\\\" *ngIf=\\\"doctorData.clinic_services.Clinic_Diagnostics==true\\\" > Diagnostics </a></li>\\n\\t          \\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-ipd\\\" *ngIf=\\\"doctorData.clinic_services.Clinic_IPD==true\\\"> IPD </a></li>\\n\\t          \\t</ul>\\n\\t          </div>\\n\\n\\t          <div class=\\\"ipd-body\\\">\\n\\t    \\t<!-- <div class=\\\"cus-sidebar-wrapper side-bar-cstm\\\">\\n\\t    \\t\\t<div class=\\\"cus-sidebar\\\">\\n\\t    \\t\\t\\t<ul> \\n\\t    \\t\\t\\t\\t<li>\\n\\t    \\t\\t\\t\\t\\t<div class=\\\"\\\">\\n\\t    \\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-3\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"pd-left\\\"><b>From</b></h4>\\n\\t    \\t\\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-9\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t<div class=\\\"cstm-mg\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t<angular2-date-picker [(ngModel)]=\\\"fromDate1\\\" [settings]=\\\"settings\\\"></angular2-date-picker>\\n\\t    \\t\\t\\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t</li>\\n\\t    \\t\\t\\t\\t<li>\\n\\t    \\t\\t\\t\\t\\t<div class=\\\"\\\">\\n\\t    \\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-3\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t<h4 class=\\\"pd-left\\\"><b>To</b></h4>\\n\\t    \\t\\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-9\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t<div class=\\\"cstm-mg\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t<angular2-date-picker [(ngModel)]=\\\"toDate1\\\" [settings]=\\\"settings\\\"></angular2-date-picker>\\n\\t    \\t\\t\\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t</li>\\n\\t    \\t\\t\\t\\t<li class=\\\"text-right brder-cstm\\\">\\n\\t    \\t\\t\\t\\t\\t<div class=\\\"col-lg-12 text-center\\\">\\n\\t    \\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-go\\\" (click)=\\\"go()\\\">Go</button>\\n\\t    \\t\\t\\t\\t\\t</div>\\n\\t    \\t\\t\\t\\t</li>\\n\\t    \\t\\t\\t\\t<li class=\\\"li-cstm\\\"> <a href=\\\"javascript:void(0);\\\"> For Past</a> </li>\\n\\t    \\t\\t\\t\\t<li class=\\\"{{getClass(1)}}\\\" (click)=\\\"activatetab(1)\\\"> <a href=\\\"javascript:void(0);\\\"> 1 Week &nbsp;<small *ngIf=\\\"activatedtab==1\\\">({{fromDate | date: 'dd/LL/yy'}} - {{toDate | date: 'dd/LL/yy'}})</small> </a> </li>\\n\\t    \\t\\t\\t\\t<li class=\\\"{{getClass(2)}}\\\" (click)=\\\"activatetab(2)\\\"> <a href=\\\"javascript:void(0);\\\"> 2 Weeks &nbsp;<small *ngIf=\\\"activatedtab==2\\\">({{fromDate | date: 'dd/LL/yy'}} - {{toDate | date: 'dd/LL/yy'}})</small>  </a> </li>\\n\\t    \\t\\t\\t\\t<li class=\\\"{{getClass(3)}}\\\" (click)=\\\"activatetab(3)\\\"> <a href=\\\"javascript:void(0);\\\"> 1 Month &nbsp;<small *ngIf=\\\"activatedtab==3\\\">({{fromDate | date: 'dd/LL/yy'}} - {{toDate | date: 'dd/LL/yy'}})</small> </a> </li>\\n\\t    \\t\\t\\t\\t<li class=\\\"{{getClass(4)}}\\\" (click)=\\\"activatetab(4)\\\"> <a href=\\\"javascript:void(0);\\\"> 3 Month &nbsp;<small *ngIf=\\\"activatedtab==4\\\">({{fromDate | date: 'dd/LL/yy'}} - {{toDate | date: 'dd/LL/yy'}})</small></a> </li>\\n\\t    \\t\\t\\t\\t<li class=\\\"{{getClass(5)}}\\\" (click)=\\\"activatetab(5)\\\"> <a href=\\\"javascript:void(0);\\\"> 6 Month &nbsp;<small *ngIf=\\\"activatedtab==5\\\">({{fromDate | date: 'dd/LL/yy'}} - {{toDate | date: 'dd/LL/yy'}})</small></a> </li>\\n\\t    \\t\\t\\t\\t<li class=\\\"{{getClass(6)}}\\\" (click)=\\\"activatetab(6)\\\"> <a href=\\\"javascript:void(0);\\\"> 1 Year &nbsp;<small *ngIf=\\\"activatedtab==6\\\">({{fromDate | date: 'dd/LL/yy'}} - {{toDate | date: 'dd/LL/yy'}})</small></a> </li>\\n\\t    \\t\\t\\t\\t<li class=\\\"{{getClass(7)}}\\\" (click)=\\\"activatetab(7)\\\"> <a href=\\\"javascript:void(0);\\\"> All </a> </li>\\n\\t    \\t\\t\\t</ul>\\n\\t    \\t\\t</div>\\n\\t    \\t</div> -->\\n\\n\\t    \\t<div class=\\\"cus-content-wrapper\\\">\\n\\t    \\t\\t<div class=\\\"cus-content\\\">\\n\\t    \\t\\t\\t<div class=\\\"row\\\">\\n\\t    \\t\\t\\t\\t<div class=\\\"col-lg-6 brdr-rght\\\">\\n\\t    \\t\\t\\t\\t\\t<ul class=\\\"nav nav-tabs cstm-ul-new\\\">\\n\\t    \\t\\t\\t\\t\\t\\t<li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"#home-cstm\\\">DIAGNOSTICS DETAILS FOR TODAY</a></li>\\n\\t    \\t\\t\\t\\t\\t\\t<!-- <li><a data-toggle=\\\"tab\\\" href=\\\"#menu2-cstm\\\">Order</a></li> -->\\n\\t    \\t\\t\\t\\t\\t</ul>\\n\\t    \\t\\t\\t\\t\\t<div class=\\\"tab-content\\\">\\n\\t    \\t\\t\\t\\t\\t\\t<div id=\\\"home-cstm\\\" class=\\\"tab-pane fade in active\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t<div class=\\\"cstm-pad\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tb-1 new-table\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Total Diagnostic Sales</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalPharmacySales + totalWalkinSales}} &nbsp;</b></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Prescriptions Sales</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalPharmacySales}} &nbsp;</b></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Other Sales</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalWalkinSales}}</b> </td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Cash collection</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalCashAmount+totalWalkinCashAmount}} </b> <small class=\\\"xs-small\\\">({{getData(checkIsNan(totalWalkinCashPatient))}}%)</small>&nbsp;</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Online collection</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalOnlineAmount+totalWalkinOnlineAmount}}</b> <small class=\\\"xs-small\\\">({{getData(checkIsNan(totalWalkinOnlinePatient))}}%)</small>&nbsp;</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Total Sale Orders</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalPharmacySalesLength + totalWalkinPatient}} &nbsp;</b></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr >\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Prescription Orders</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalPharmacySalesLength}} &nbsp;</b><small class=\\\"xs-small\\\">({{getData(checkIsNan(totalPrecOrdersPercentage))}}%)</small></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Other Orders</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalWalkinPatient}} &nbsp;</b><small class=\\\"xs-small\\\">({{getData(checkIsNan(totalOthersOrdersPercentage))}}%)</small></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr >\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Avg sale per Order</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(checkIsNan((totalPharmacySales + totalWalkinSales)/(totalPharmacySalesLength + totalWalkinPatient)))}} &nbsp;</b></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Diagnostics Sales per Prescription</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(DiagnosticsSalesperPrescription)}} &nbsp;</b></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr >\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Total test done</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{investigationUniqueArray.length}} &nbsp;</b><b><span class=\\\"clr-blue\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal2\\\">View</span></b></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <tr >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Min collection in a day</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{minSaleOfDay}} &nbsp;</b><span>({{minCollectionDate | date: 'dd/MM/yyyy'}})</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Avg. daily collection</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(checkIsNan((totalPharmacySales + totalWalkinSales)/(dateDiff)))}} &nbsp;</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\" >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Prescriptions sales</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalPharmacySales}} &nbsp;</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Other Sales</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalWalkinSales}}</b> </td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Top 10 Test (Sale Num.)</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b><span class=\\\"clr-blue\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click) =\\\"getSorted(1)\\\">View</span></b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Top 10 Test (Sale Value)</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b><span class=\\\"clr-blue\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click) =\\\"getSorted(2)\\\">View</span></b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t    <!-- <div id=\\\"menu2-cstm\\\" class=\\\"tab-pane fade\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t      \\t<div class=\\\"cstm-pad\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t   \\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t\\t\\t    \\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tb-1 new-table-two\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Max order in a day </td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{checkIsNan(maxOrderOfDay)}} &nbsp;</b><span>({{maxOrderDate | date: 'dd/MM/yyyy'}})</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Min order in a day</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{checkIsNan(minOrderOfDay)}} &nbsp;</b><span>({{minOrderDate | date: 'dd/MM/yyyy'}})</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Avg daily order</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getDataCeil((totalPharmacySalesLength+totalWalkinPatient)/(dateDiff))}}</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h5 class=\\\"cstm-heading\\\">DIAGNOSTICS ORDERS</h5>     \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"chart-diagnos chart-box wrap-canavas\\\" *ngIf=\\\"!loading\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t    \\t\\t\\t\\t<canvas baseChart class=\\\"can-vas-1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                [datasets]=\\\"lineChartData2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                [labels]=\\\"lineChartLabels2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                [options]=\\\"lineChartOptions2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                [colors]=\\\"lineChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                [legend]=\\\"lineChartLegend2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                [chartType]=\\\"lineChartType2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                (chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t                (chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t            </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t    \\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t   \\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t   \\t</div> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t   </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<h5 class=\\\"cstm-heading\\\">DIAGNOSTICS SALES</h5>     \\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"chart-diagnos chart-box wrap-canavas\\\" *ngIf=\\\"!loading\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<canvas baseChart class=\\\"can-vas\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[datasets]=\\\"lineChartData\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"lineChartLabels\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[options]=\\\"lineChartOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[colors]=\\\"lineChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"lineChartLegend\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"lineChartType\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tb-1 table-bordered tab-new-cstm\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"cstm-tr\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td colspan=\\\"5\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDoctor-wise Break-up\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"cstm-tr-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\" width=\\\"80px\\\"><b>Sr no</b></td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDoctor Name\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tSales(Rs.) Contribution\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tOrder contribution\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tAvg Sales per Prescription\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- {{dataArray | json}} -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let op of dataArray; let i = index\\\" class=\\\"cstm-tr-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\" width=\\\"80px\\\">{{i+1}}</td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDr. {{getDoctorName(op._id)}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{op.total_sales_amount}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<small class=\\\"fontsmall\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t({{getData(checkIsNan(getPercentage(op.total_sales_amount,totalSalesDoctorPlusWalkin)))}}%)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{op.conversion}} <small> ({{getData(op.orderPercentage)}}%)</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{op.sales_per_pres}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\" width=\\\"80px\\\">1</td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tOther Sales\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{checkIsNan(totalSalesWalkin)}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<small class=\\\"fontsmall\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t({{getData(checkIsNan(getPercentage(totalSalesWalkin,totalSalesDoctorPlusWalkin)))}}%)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\">{{checkIsNan(totalSalesWalkin)}} <small class='fontsmall'>({{getData(checkIsNan(getPercentage(totalSalesWalkin,totalSalesDoctorPlusWalkin)))}}%)</small></td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tN.A\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{getData(checkIsNan(totalSalesWalkin/otherSales.length))}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t\\t<div class=\\\"container footer-cstm-an\\\">\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-lg-4 text-center\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"brdr-rght\\\">SALES : <b>{{checkIsNan(totalConversion)}}%</b></p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-lg-4 text-center\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"brdr-rght\\\">TESTS DONE : <b>{{investigationUniqueArray.length}}</b></p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"col-lg-4 text-center\\\">\\n\\t\\t\\t\\t\\t<div>\\n\\t\\t\\t\\t\\t\\t<p class=\\\"\\\">CONVERSION RATIO : <b>{{checkIsNan(totalConversion)}}%</b></p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<!-- Top 10 Products (Sale Num.) -->\\n\\t\\t<div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\n\\t\\t\\t<div class=\\\"modal-dialog\\\">\\n\\t\\t\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"modal-body cstm-md-bdy\\\">          \\t\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"cstm-tab\\\">\\n\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tb-1 table-bordered\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"cstm-tr-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" width=\\\"80px\\\"><b>Sr no</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Type</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Name</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Total Sales</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Occurence</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Perncetage</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"{{getClassMap(data,i)}}\\\" *ngFor=\\\"let data of topProfitArray | slice: 0:10;let i = index; \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" width=\\\"80px\\\">{{i+1}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">{{data.type}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{data.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{data.sales}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{data.occurence}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{getData(data.percentage)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t</div>      \\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\n\\t\\t<!-- total test-->\\n\\t\\t<div class=\\\"modal fade\\\" id=\\\"myModal2\\\" role=\\\"dialog\\\">\\n\\t\\t\\t<div class=\\\"modal-dialog\\\">\\n\\t\\t\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"modal-body cstm-md-bdy\\\">          \\t\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"cstm-tab\\\">\\n\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tb-1 table-bordered\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"cstm-tr-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" width=\\\"80px\\\"><b>Sr no</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Type</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Test Name</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Occurrence</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"{{getClassMap(data,i)}}\\\" *ngFor=\\\"let data of investigationUniqueArray;let i = index; \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" width=\\\"80px\\\">{{i+1}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">{{data.type}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">{{data.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">{{data.count}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\">{{data.sales}}</td> -->\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t</div>      \\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.component.html\n// module id = ../../../../../src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.component.html\n// module chunks = dashboard-progress-diagnosis.module","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../providers/user.service';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n    selector: 'app-dashboard-progress-diagnosis',\n    templateUrl: './dashboard-progress-diagnosis.component.html',\n    styleUrls: ['./dashboard-progress-diagnosis.component.css']\n})\nexport class DashboardProgressDiagnosisComponent implements OnInit {\n    doctorData\n    activatedtab\n    totalPatient\n    totalWalkinPatient\n    loading\n    totalWalkinCashPatient: number\n    totalWalkinOnlinePatient: number\n    totalPharmacySales\n    totalWalkinSales\n    totalPharmacySalesLength\n    maxSaleOfDay\n    minSaleOfDay\n    prescriptionsSalespercentage\n    NonprescriptionsSalespercentage\n    totalSalePercentage\n    totalNonSalePercentage\n    doctorArray\n    dataArray\n    otherSales\n    totalProfit\n    totalPrescriptions\n    totalSales\n    totalSalesAmount\n    totalConversion\n    totalSalesWalkin\n    totalSalesDoctorPlusWalkin\n    otherSalesPercent\n    totalSalesOtherPercent\n    totalSalesPerPresPercent\n    totalSalesPerPres\n    maxSaleInADay\n    totalWalkinProfit\n    maxCollectionDate\n    minCollectionDate\n    maxOrderOfDay\n    minOrderOfDay\n    minOrderDate\n    maxOrderDate\n    dateDiff\n    totalMale\n    totalFemale\n    totalMalePercentage\n    totalFemalePercentage\n    totalWalkInPatientsbyDoc\n    totalAppointmentPatients\n    totalEmergencyPatients\n    totalWalkInPatientsbyDocPercentage\n    totalAppointmentPatientsPercentage\n    totalEmergencyPatientsPercentage\n    avgAge\n    newPatient\n    prescriptionArray\n    totalSalesArray\n    standaloneArray\n    totalCashAmount\n    totalOnlineAmount\n    totalWalkinCashAmount\n    totalWalkinOnlineAmount\n    prescriptionOrdersArray\n    totalSalesOrdersArray\n    standaloneOrdersArray\n    totalPrecOrdersPercentage\n    totalOthersOrdersPercentage\n    topProfitArray\n    investigationUniqueArray\n    DiagnosticsSalesperPrescription\n    fromDate = new Date()\n    toDate = new Date()\n    fromDate1 = new Date()\n    toDate1 = new Date()\n    newDate = new Date()\n    settings = {\n        bigBanner: true,\n        timePicker: false,\n        format: 'dd-MMM-yyyy',\n        defaultOpen: false\n    }\n    datesArray\n    finalTimeMinArray\n    fiveMinPatintArray\n    fiveMinArray\n    //CHARTS ////////////\n    public lineChartData: Array < any > = [{\n        data: [],\n        label: 'Total Sales'\n    },\n    // {data: [], label: 'Prescription Sales'},\n    // {data: [], label: 'Standalone Sales'}\n    ];\n    public lineChartLabels: Array < any > = [];\n    public lineChartOptions: any = {\n        responsive: true,\n        legend: {\n            display: false,\n        }\n    };\n    public lineChartColors: Array < any > = [{ // grey\n        backgroundColor: 'rgba(148,159,177,0.2)',\n        borderColor: 'rgba(148,159,177,1)',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    },\n    { // dark grey\n        backgroundColor: 'rgba(77,83,96,0.2)',\n        borderColor: 'rgba(77,83,96,1)',\n        pointBackgroundColor: 'rgba(77,83,96,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(77,83,96,1)'\n    },\n    { // grey\n        backgroundColor: 'rgba(148,159,177,0.2)',\n        borderColor: 'rgba(148,159,177,1)',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }\n    ];\n    public lineChartLegend: boolean = true;\n    public lineChartType: string = 'line';\n    //charts end /////////\n\n    ////Chart Orders //////////////\n    public lineChartData2: Array < any > = [{\n        data: [],\n        label: 'Total Profit'\n    },\n    // {data: [], label: 'Prescription Profit'},\n    // {data: [], label: 'Standalone Profit'}\n    ];\n    public lineChartLabels2: Array < any > = [];\n    public lineChartOptions2: any = {\n        responsive: true,\n        legend: {\n            display: false,\n        }\n    };\n    public lineChartLegend2: boolean = true;\n    public lineChartType2: string = 'line';\n    //charts end ////////\n\n    constructor(private userService: UserService, private datePipe: DatePipe, private toastr: ToastrService) {}\n\n    ngOnInit() {\n        this.doctorData = JSON.parse(localStorage['doctorDetails'])\n        console.log(this.doctorData)\n        this.activatedtab = 0\n        this.newDate.setDate(this.newDate.getDate() + 1)\n        this.fromDate1.setDate(this.fromDate1.getDate() - 6)\n        this.activatetab(1)\n        this.doctorArray = []\n        this.dataArray = []\n        this.otherSales = []\n    }\n\n    // events\n    public chartClicked(e: any): void {\n        console.log(e);\n    }\n\n    public chartHovered(e: any): void {\n        console.log(e);\n    }\n\n    activatetab(i) {\n        this.activatedtab = i\n        var object\n        object = {}\n        var date = new Date()\n        object.doctm_clinic_id = this.doctorData.doctm_clinic_id\n        object.end_date = new Date()\n        this.totalPatient = 0\n        this.totalWalkinPatient = 0\n        this.totalWalkinCashPatient = 0\n        this.totalWalkinOnlinePatient = 0\n        this.totalPharmacySales = 0\n        this.totalWalkinSales = 0\n        this.totalPharmacySalesLength = 0\n        this.maxSaleOfDay = 0\n        this.minSaleOfDay = 0\n        this.prescriptionsSalespercentage = 0\n        this.NonprescriptionsSalespercentage = 0\n        this.totalSalePercentage = 0\n        this.totalNonSalePercentage = 0\n        this.totalPrescriptions = 0\n        this.totalSales = 0\n        this.totalSalesAmount = 0\n        this.totalConversion = 0\n        this.totalSalesPerPres = 0\n        this.totalSalesWalkin = 0\n        this.totalProfit = 0\n        this.totalSalesDoctorPlusWalkin = 0\n        this.otherSalesPercent = 0\n        this.totalSalesOtherPercent = 0\n        this.totalSalesPerPresPercent = 0\n        this.maxSaleInADay = 0\n        this.totalWalkinProfit = 0\n        this.maxCollectionDate = 0\n        this.minCollectionDate = 0\n        this.maxOrderOfDay = 0\n        this.minOrderOfDay = 0\n        this.minOrderDate = 0\n        this.maxOrderDate = 0\n        this.dateDiff = 0\n        this.totalMale = 0\n        this.totalFemale = 0\n        this.totalMalePercentage = 0\n        this.totalFemalePercentage = 0\n        this.totalWalkInPatientsbyDoc = 0\n        this.totalAppointmentPatients = 0\n        this.totalEmergencyPatients = 0\n        this.totalWalkInPatientsbyDocPercentage = 0\n        this.totalAppointmentPatientsPercentage = 0\n        this.totalEmergencyPatientsPercentage = 0\n        this.avgAge = 0\n        this.newPatient = 0\n        this.prescriptionArray = []\n        this.totalSalesArray = []\n        this.standaloneArray = []\n        this.totalCashAmount = 0\n        this.totalOnlineAmount = 0\n        this.totalWalkinCashAmount = 0\n        this.totalWalkinOnlineAmount = 0\n        this.prescriptionOrdersArray = []\n        this.totalSalesOrdersArray = []\n        this.standaloneOrdersArray = []\n        this.totalPrecOrdersPercentage = 0\n        this.totalOthersOrdersPercentage = 0\n        this.DiagnosticsSalesperPrescription = 0\n        this.topProfitArray = []\n        this.investigationUniqueArray = []\n        if (i == 1) {\n            object.start_date = date\n        } \n        // else if (i == 1) {\n            //     object.start_date = new Date(date.setDate(date.getDate() - 6))\n            // } else if (i == 2) {\n                //     object.start_date = new Date(date.setDate(date.getDate() - 13))\n                // } else if (i == 3) {\n                    //     object.start_date = new Date(date.setMonth(date.getMonth() - 1))\n                    // } else if (i == 4) {\n                        //     object.start_date = new Date(date.setMonth(date.getMonth() - 3))\n                        // } else if (i == 5) {\n                            //     object.start_date = new Date(date.setMonth(date.getMonth() - 6))\n                            // } else if (i == 6) {\n                                //     object.start_date = new Date(date.setFullYear(date.getFullYear() - 1))\n                                // } else if (i == 7) {\n                                    //     object.start_date = new Date()\n                                    //     object.maximum = true\n                                    // }\n                                    //console.log(object)\n                                    this.fromDate = new Date(object.start_date)\n                                    this.toDate = new Date(object.end_date)\n                                    this.loading = true\n                                    this.userService.DiagnosticsAnalytics(object).subscribe((result) => {\n                                        console.log(result)\n                                        if (result.response) {\n                                            var walkinTrue = []\n                                            var walkinFalse = []\n                                            for (var i = 0; i < result.data1.length; i++) {\n                                                if(result.data1[i].walkin_patient){\n                                                    walkinTrue.push(result.data1[i])\n                                                }else{\n                                                    walkinFalse.push(result.data1[i])\n                                                }\n                                            }\n                                            var maxInData = []\n                                            var maxArray = []\n                                            var maxProfit = []\n                                            var maxOrder = []\n                                            var age = 0\n                                            var latestArray\n                                            this.doctorArray = result.dataDoctors\n                                            var total_sales_length = 0\n                                            for (var i = 0; i < result.data.length; i++) {\n                                                this.totalPatient = result.data.length\n                                                for (var j = 0; j < result.data[i].total_sales.length; j++) {\n                                                    if (result.data[i].total_sales[j].diagnostics == true) {\n                                                        this.totalPharmacySalesLength++\n                                                        this.totalPharmacySales += result.data[i].total_sales[j].investigation_cost\n\n                                                        maxInData.push(result.data[i].total_sales[j].investigation_cost)\n                                                        maxArray.push(this.datePipe.transform(result.data[i].total_sales[j].createdAt, 'yyyy-MM-dd'))\n                                                        total_sales_length++\n                                                        if (result.data[i].total_sales[j].payment_mode_diagnostics == 'Cash') {\n                                                            this.totalCashAmount += result.data[i].total_sales[j].investigation_cost\n                                                            this.totalWalkinCashPatient++\n                                                        } else {\n                                                            this.totalOnlineAmount += result.data[i].total_sales[j].investigation_cost\n                                                            this.totalWalkinOnlinePatient++\n                                                        }\n                                                        if (result.data[i].total_sales[j].registration.age) {\n                                                            age += result.data[i].total_sales[j].registration.age\n                                                        }\n                                                        if (result.data[i].total_sales[j].registration.lastVisit.status == false) {\n                                                            this.newPatient++\n                                                        }\n                                                    }\n                                                }\n                                                maxOrder.push(result.data[i].total_sales.length)\n                                            }\n\n                                            for (var i = 0; i < walkinTrue.length; i++) {\n                                                this.totalWalkinPatient = walkinTrue.length\n                                                this.totalWalkinSales += walkinTrue[i].total_amount\n                                                maxProfit.push(walkinTrue[i].total_amount - walkinTrue[i].cost_amount)\n                                                maxInData.push(walkinTrue[i].total_amount)\n                                                maxArray.push(this.datePipe.transform(walkinTrue[i].createdAt, 'yyyy-MM-dd'))\n                                                maxOrder.push(walkinTrue.length)\n                                                if (walkinTrue[i].payment_mode == 'Cash') {\n                                                    this.totalWalkinCashAmount += walkinTrue[i].total_amount\n                                                    this.totalWalkinCashPatient++\n                                                } else {\n                                                    this.totalWalkinOnlineAmount += walkinTrue[i].total_amount\n                                                    this.totalWalkinOnlinePatient++\n                                                }\n                                            }\n                                            var diff = Math.abs(this.toDate.getTime() - this.fromDate.getTime());\n                                            this.DiagnosticsSalesperPrescription = (this.totalPharmacySales/this.totalPharmacySalesLength)\n                                            this.dateDiff = Math.trunc(diff / (1000 * 3600 * 24)) + 1;\n                                            this.totalWalkinCashPatient = (this.totalWalkinCashPatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                                            this.totalWalkinOnlinePatient = (this.totalWalkinOnlinePatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                                            this.totalPrecOrdersPercentage = (this.totalPharmacySalesLength * 100) / (total_sales_length + this.totalWalkinPatient)\n                                            this.totalOthersOrdersPercentage = (this.totalWalkinPatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                                            this.prescriptionsSalespercentage = (this.totalPharmacySales / (this.totalPharmacySales + this.totalWalkinSales)) * 100\n                                            this.NonprescriptionsSalespercentage = (this.totalWalkinSales / (this.totalPharmacySales + this.totalWalkinSales)) * 100\n                                            this.totalSalePercentage = (this.totalPharmacySalesLength / (this.totalPharmacySalesLength + this.totalWalkinPatient)) * 100\n                                            this.totalNonSalePercentage = (this.totalWalkinPatient / (this.totalPharmacySalesLength + this.totalWalkinPatient)) * 100\n                                            this.dataArray = result.data\n                                            this.otherSales = walkinTrue\n                                            for (var i = 0; i < this.dataArray.length; i++) {\n                                                this.dataArray[i].true_sales = []\n                                                this.dataArray[i].false_sales = []\n                                                this.dataArray[i].total_sales_amount = 0\n                                                this.dataArray[i].sales_per_pres = 0\n                                                this.dataArray[i].orderPercentage = 0\n                                                for (var j = 0; j < this.dataArray[i].total_sales.length; j++) {\n                                                    if (this.dataArray[i].total_sales[j].diagnostics) {\n                                                        this.dataArray[i].total_sales_amount = this.dataArray[i].total_sales_amount + this.dataArray[i].total_sales[j].investigation_cost\n\n                                                        this.dataArray[i].true_sales.push(this.dataArray[i].total_sales[j])\n                                                    } else {\n                                                        this.dataArray[i].false_sales.push(this.dataArray[i].total_sales[j])\n                                                    }\n                                                }\n                                                this.dataArray[i].conversion = this.dataArray[i].true_sales.length\n                                                //this.dataArray[i].conversion = this.getData((this.dataArray[i].true_sales.length * 100) / this.dataArray[i].total_sales.length)\n                                                if (this.dataArray[i].true_sales.length > 0) {\n                                                    this.dataArray[i].sales_per_pres = parseFloat(this.getData(this.dataArray[i].total_sales_amount / this.dataArray[i].true_sales.length))\n                                                }\n                                            }\n\n                                            for (var i = 0; i < this.dataArray.length; i++) {\n                                                this.dataArray[i].orderPercentage = (this.dataArray[i].true_sales.length * 100) / this.totalPharmacySalesLength\n                                                this.totalPrescriptions = this.totalPrescriptions + this.dataArray[i].total_sales.length\n                                                this.totalSales = this.totalSales + this.dataArray[i].true_sales.length\n                                                this.totalSalesAmount = this.totalSalesAmount + this.dataArray[i].total_sales_amount\n                                            }\n                                            this.totalConversion = this.getData((this.totalSales * 100) / this.totalPrescriptions)\n                                            for (var i = 0; i < walkinTrue.length; i++) {\n                                                this.totalSalesWalkin = this.totalSalesWalkin + walkinTrue[i].total_amount\n                                            }\n                                            this.totalSalesDoctorPlusWalkin = this.getData(this.totalSalesAmount + this.totalSalesWalkin)\n                                            if (this.doctorArray.length > this.dataArray.length) {\n                                                for (var i = 0; i < this.doctorArray.length; i++) {\n                                                    var boolean = false\n                                                    for (var j = 0; j < this.dataArray.length; j++) {\n                                                        if (this.doctorArray[i]._id.toString() == this.dataArray[j]._id.toString()) {\n                                                            boolean = true\n                                                            break\n                                                        }\n                                                    }\n                                                    if (boolean == false) {\n                                                        this.dataArray.push({\n                                                            _id: this.doctorArray[i]._id,\n                                                            total_sales: [],\n                                                            true_sales: [],\n                                                            total_sales_amount: 0,\n                                                            conversion: 0,\n                                                            sales_per_pres: 0\n                                                        })\n                                                    }\n                                                }\n                                            }\n                                            this.totalSales = this.totalSales + this.otherSales.length\n                                            for (var i = 0; i < this.dataArray.length; i++) {\n                                                this.dataArray[i].totalPrescriptionsPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].total_sales.length, this.totalPrescriptions)))\n                                                this.dataArray[i].trueSalesPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].true_sales.length, this.totalSales)))\n                                                this.dataArray[i].trueSalesAmtPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].total_sales_amount, this.totalSalesDoctorPlusWalkin)))\n                                            }\n                                            this.otherSalesPercent = this.getData(this.checkIsNan(this.getPercentage(this.otherSales.length, this.totalSales)))\n                                            this.totalSalesOtherPercent = this.getData(this.checkIsNan(this.getPercentage(this.totalSalesWalkin, this.totalSalesDoctorPlusWalkin)))\n                                            this.totalSalesPerPresPercent = this.getData(this.checkIsNan(this.totalSalesWalkin / this.otherSales.length))\n                                            this.totalSalesPerPres = parseFloat(this.getData(this.totalSalesDoctorPlusWalkin / this.totalSales))\n                                            var dateArray = []\n                                            var newMaxArray = []\n                                            newMaxArray.push(maxArray[0])\n                                            for (var i = 0; i < maxArray.length; i++) {\n                                                var boolean = false\n                                                for (var j = 0; j < newMaxArray.length; j++) {\n                                                    if (maxArray[i] == newMaxArray[j]) {\n                                                        boolean = true\n                                                        break\n                                                    }\n                                                }\n                                                if (boolean == false) {\n                                                    newMaxArray.push(maxArray[i])\n                                                }\n                                            }\n                                            for (var i = 0; i < newMaxArray.length; i++) {\n                                                var total_prep_amount: number = 0\n                                                var total_walkin_amount: number = 0\n                                                var total_prep_orders: number = 0\n                                                for (var j = 0; j < this.dataArray.length; j++) {\n                                                    for (var k = 0; k < this.dataArray[j].total_sales.length; k++) {\n                                                        if (this.dataArray[j].total_sales[k].diagnostics == true) {\n                                                            if (newMaxArray[i] == this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'yyyy-MM-dd')) {\n                                                                total_prep_amount += this.dataArray[j].total_sales[k].investigation_cost\n                                                                total_prep_orders++\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                this.prescriptionOrdersArray.push(total_prep_orders)\n                                                this.prescriptionArray.push(total_prep_amount)\n                                                var total_walkin_orders: number = 0\n                                                for (var l = 0; l < this.otherSales.length; l++) {\n                                                    //total_walkin_orders = (this.otherSales.length)\n                                                    if (newMaxArray[i] == this.datePipe.transform(this.otherSales[l].createdAt, 'yyyy-MM-dd')) {\n                                                        total_walkin_amount += this.otherSales[l].total_amount\n                                                        total_walkin_orders++\n                                                    }\n                                                }\n                                                this.standaloneOrdersArray.push(total_walkin_orders)\n                                                this.standaloneArray.push(total_walkin_amount)\n                                                this.totalSalesArray.push(total_prep_amount + total_walkin_amount)\n                                                this.totalSalesOrdersArray.push(total_prep_orders + total_walkin_orders)\n                                                dateArray.push(newMaxArray[i])\n                                            }\n                                            this.maxSaleOfDay = Math.max(...this.totalSalesArray)\n                                            this.minSaleOfDay = Math.min(...this.totalSalesArray)\n                                            var newMaxValue = -1\n                                            newMaxValue = this.totalSalesArray.findIndex(x => x == this.maxSaleOfDay);\n                                            this.maxCollectionDate = dateArray[newMaxValue]\n                                            var newMinValue = -1\n                                            newMinValue = this.totalSalesArray.findIndex(x => x == this.minSaleOfDay);\n                                            this.minCollectionDate = dateArray[newMinValue]\n                                            /////////// set chart detail ///////////////\n                                            this.lineChartData = [{\n                                                data: this.totalSalesArray,\n                                                label: 'Total Sales'\n                                            },\n                                            ];\n                                            var newDateArray11 = []\n                                            this.datesArray = dateArray\n                                            this.lineChartLabels = this.datesArray\n                                            for (var i = 0; i < dateArray.length; i++) {\n                                                newDateArray11.push(dateArray[i])\n                                            }\n                                            /////////// set chart detail ///////////////\n\n                                            /////////////Chart Profit/////////////////////\n                                            this.maxOrderOfDay = Math.max(...this.totalSalesOrdersArray)\n                                            this.minOrderOfDay = Math.min(...this.totalSalesOrdersArray)\n                                            var newMinOrder = -1\n                                            newMinOrder = this.totalSalesOrdersArray.findIndex(x => x == this.minOrderOfDay);\n                                            this.minOrderDate = dateArray[newMinOrder]\n                                            var newMaxOrder = -1\n                                            newMaxOrder = this.totalSalesOrdersArray.findIndex(x => x == this.maxOrderOfDay);\n                                            this.maxOrderDate = dateArray[newMaxOrder]\n                                            this.lineChartData2 = [{\n                                                data: this.totalSalesOrdersArray,label: 'Total Orders'},\n                                                ];\n                                                this.lineChartLabels2 = dateArray\n                                                /////////////////////////// Date Sort Logic //////////////////////\n                                                this.sortSales(dateArray, this.totalSalesArray)\n                                                this.sortOrders(newDateArray11, this.totalSalesOrdersArray);\n                                                ///////////////////////// End sort Logic ////////////////////////\n                                                //////////////////////////Top 10 Products///////////////////\n                                                for (var i = 0; i < result.data1.length; i++) {\n                                                    for (var j = 0; j < result.data1[i].tests.length; j++) {\n                                                        for (var k = 0; k < result.data1[i].tests[j].amount.length; k++) {\n                                                            var boolean = false\n                                                            for (var a = 0; a < this.topProfitArray.length; a++) {\n                                                                if(result.data1[i].tests[j].opt[k] == this.topProfitArray[a].type &&\n                                                                    result.data1[i].tests[j].product[k]==this.topProfitArray[a].name){\n                                                                    boolean = true\n                                                            }\n                                                        }\n                                                        if (boolean == false) {\n                                                            this.topProfitArray.push({\n                                                                type: result.data1[i].tests[j].opt[k],\n                                                                name: result.data1[i].tests[j].product[k],\n                                                                sales:0,\n                                                                occurence: 0,\n                                                                percentage: 0\n                                                            })\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            for (var a = 0; a < this.topProfitArray.length; a++) {\n                                                for (var i = 0; i < result.data1.length; i++) {\n                                                    for (var j = 0; j < result.data1[i].tests.length; j++) {\n                                                        for (var k = 0; k < result.data1[i].tests[j].amount.length; k++) {\n                                                            if(result.data1[i].tests[j].opt[k] == this.topProfitArray[a].type &&\n                                                                result.data1[i].tests[j].product[k]==this.topProfitArray[a].name){\n                                                                this.topProfitArray[a].occurence++\n                                                            this.topProfitArray[a].sales+=result.data1[i].tests[j].amount[k]\n                                                            this.topProfitArray[a].percentage = (this.topProfitArray[a].sales*100)/(this.totalWalkinSales+this.totalPharmacySales)\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        console.log(this.topProfitArray)\n                                        /////////////////////////Top 10 End ///////////////////////\n\n                                        ///////////////////////////Total Test//////////////////////\n\n                                        for (var k = 0; k < result.data.length; k++) {\n                                            for (var b = 0; b < result.data[k].total_sales.length; b++) {\n                                                var boolean1 = false\n                                                var count1 = 0\n                                                for (var l = 0;l < result.data[k].total_sales[b].precription.investigationArray.length; l++) { \n                                                    if(result.data[k].total_sales[b].precription.investigationArray[l].name !='Mammography' && \n                                                        result.data[k].total_sales[b].precription.investigationArray[l].name != 'ECG' && \n                                                        result.data[k].total_sales[b].precription.investigationArray[l].name != 'EEG' && \n                                                        result.data[k].total_sales[b].precription.investigationArray[l].name != 'Echo' && \n                                                        result.data[k].total_sales[b].precription.investigationArray[l].name != 'Uroflowmetry' &&\n                                                        result.data[k].total_sales[b].precription.investigationArray[l].name != 'TMT'){\n                                                        for (var m = 0; m <  result.data[k].total_sales[b].precription.investigationArray[l].values.length; m++) {                     \n                                                            var boolean = false\n                                                            for (var a = 0; a < this.investigationUniqueArray.length; a++) {\n                                                                if(result.data[k].total_sales[b].precription.investigationArray[l].name == this.investigationUniqueArray[a].type &&\n                                                                    result.data[k].total_sales[b].precription.investigationArray[l].values[m].display == this.investigationUniqueArray[a].name){\n                                                                    count1++\n                                                                boolean = true\n                                                                break;\n                                                            }\n                                                        }\n                                                        if(boolean == false){\n                                                            this.investigationUniqueArray.push({\n                                                                type:result.data[k].total_sales[b].precription.investigationArray[l].name,\n                                                                name: result.data[k].total_sales[b].precription.investigationArray[l].values[m].value,\n                                                                count:count1 + 1\n                                                            })\n                                                        }\n                                                    }\n                                                }else{\n                                                    for (var a = 0; a < this.investigationUniqueArray.length; a++) {\n                                                        if(result.data[k].total_sales[b].precription.investigationArray[l].name == this.investigationUniqueArray[a].type &&\n                                                            result.data[k].total_sales[b].precription.investigationArray[l].values == this.investigationUniqueArray[a].name){\n                                                            count1++\n                                                        boolean = true\n                                                        break;\n                                                    }\n                                                }\n                                                if(boolean == false){\n                                                    this.investigationUniqueArray.push({\n                                                        type:result.data[k].total_sales[b].precription.investigationArray[l].name,\n                                                        name: result.data[k].total_sales[b].precription.investigationArray[l].values,\n                                                        count:count1 + 1\n                                                    })\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                for (var a = 0; a < this.investigationUniqueArray.length; a++) {\n                                    for (var i = 0; i < result.data1.length; i++) {\n                                        for (var j = 0; j < result.data1[i].tests.length; j++) {\n                                            for (var k = 0; k < result.data1[i].tests[j].amount.length; k++) {\n                                                if(result.data1[i].tests[j].opt[k] == this.investigationUniqueArray[a].type &&\n                                                    result.data1[i].tests[j].product[k]==this.investigationUniqueArray[a].name){\n                                                    this.investigationUniqueArray[a].sales+=parseInt(result.data1[i].total_amount)\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            console.log(this.investigationUniqueArray)\n\n\n                            ///////////////////////total test End /////////////////////\n                        }\n                        this.getFiveMinData()\n                        this.loading = false\n                    }, err => {\n                        console.log(err)\n                    })\n}\ngetFiveMinData(){\n    this.finalTimeMinArray = []\n    this.fiveMinPatintArray = []\n    this.fiveMinArray = []\n    var localShiftArray = []\n    var ii = localShiftArray[0]\n    for (var i = 0; i < this.doctorData.consultation_schedule.length; i++) {\n        for (var k = 0; k < this.doctorData.consultation_schedule[i].shifts.length; k++) {\n            localShiftArray.push((parseInt(this.doctorData.consultation_schedule[i].shifts[k].fromTime.hour)*60)+parseInt(this.doctorData.consultation_schedule[i].shifts[k].fromTime.minute))\n            localShiftArray.push((parseInt(this.doctorData.consultation_schedule[i].shifts[k].toTime.hour)*60)+parseInt(this.doctorData.consultation_schedule[i].shifts[k].toTime.minute) )\n            this.otherRange((parseInt(this.doctorData.consultation_schedule[i].shifts[k].fromTime.hour)*60)+parseInt(this.doctorData.consultation_schedule[i].shifts[k].fromTime.minute),\n                (parseInt(this.doctorData.consultation_schedule[i].shifts[k].toTime.hour)*60)+parseInt(this.doctorData.consultation_schedule[i].shifts[k].toTime.minute),\n                5)\n        }\n    }\n    for (var i = 0; i < this.fiveMinArray.length; i++) {\n        var amount_data = 0\n        for (var j = 0; j < this.dataArray.length; j++) {\n            for (var k = 0; k < this.dataArray[j].total_sales.length; k++) {\n                if(parseInt(this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'HH'))*60+parseInt(this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'mm'))>this.fiveMinArray[i]&&\n                    parseInt(this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'HH'))*60+parseInt(this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'mm'))<=this.fiveMinArray[i+1]){\n                    amount_data=this.dataArray[j].total_sales[k].investigation_cost\n            }\n        }\n    }\n    for (var l = 0; l < this.otherSales.length; l++) {\n        if(parseInt(this.datePipe.transform(this.otherSales[l].createdAt, 'HH'))*60+parseInt(this.datePipe.transform(this.otherSales[l].createdAt, 'mm'))>this.fiveMinArray[i]&&\n            parseInt(this.datePipe.transform(this.otherSales[l].createdAt, 'HH'))*60+parseInt(this.datePipe.transform(this.otherSales[l].createdAt, 'mm'))<=this.fiveMinArray[i+1]){\n            amount_data=this.otherSales[l].total_amount\n    }\n}\nthis.fiveMinPatintArray.push(amount_data)\n}\nfor (var i = 0; i < this.fiveMinArray.length; i++) {\n    this.finalTimeMinArray.push(Math.trunc(this.fiveMinArray[i]/60) + \":\" + Math.trunc(this.fiveMinArray[i]%60))\n}\nconsole.log(this.fiveMinPatintArray)\nconsole.log(this.finalTimeMinArray)\nthis.lineChartData = [\n{data: this.fiveMinPatintArray, label: 'Sales'},\n]\nthis.lineChartLabels = this.finalTimeMinArray\n}\notherRange(start, end, step) {\n    if (step == undefined) {\n        step = 1;\n    }\n    if (step > 0) {\n        for (var i = start; i <= end; i += step) {\n            this.fiveMinArray.push(i);\n        }\n    } else {\n        for (var i = start; i >= end; i += step) {\n            this.fiveMinArray.push(i);\n        }\n    }\n    return this.fiveMinArray\n}\nsortOrders(c, d) {\n    var swapped1;\n    do {\n        swapped1 = false;\n        for (var j = 0; j < c.length - 1; j++) {\n            if (c[j] > c[j + 1]) {\n                var temp = c[j];\n                c[j] = c[j + 1];\n                c[j + 1] = temp;\n                var temp = d[j];\n                d[j] = d[j + 1];\n                d[j + 1] = temp;\n                swapped1 = true;\n            }\n        }\n    } while (swapped1);\n\n    console.log(d)\n\n    var newDateArray1 = []\n    for (var i = 0; i < c.length; i++) {\n        newDateArray1.push(this.datePipe.transform(c[i], 'dd-MM-yyyy'))\n    }\n    this.lineChartLabels2 = newDateArray1\n}\nsortSales(a, b){\n    var swapped;\n    do {\n        swapped = false;\n        for (var i = 0; i < a.length - 1; i++) {\n            if (a[i] > a[i + 1]) {\n                var temp = a[i];\n                a[i] = a[i + 1];\n                a[i + 1] = temp;\n                var temp = b[i];\n                b[i] = b[i + 1];\n                b[i + 1] = temp;\n                swapped = true;\n            }\n        }\n    } while (swapped);\n    // }  \n    var newDateArray = []\n    for (var i = 0; i < a.length; i++) {\n        newDateArray.push(this.datePipe.transform(a[i], 'dd-MM-yyyy'))\n    }\n    this.lineChartLabels = newDateArray\n}\n// go() {\n    //     this.activatedtab = 0\n    //     this.totalPatient = 0\n    //     this.totalWalkinPatient = 0\n    //     this.totalWalkinCashPatient = 0\n    //     this.totalWalkinOnlinePatient = 0\n    //     this.totalPharmacySales = 0\n    //     this.totalWalkinSales = 0\n    //     this.totalPharmacySalesLength = 0\n    //     this.maxSaleOfDay = 0\n    //     this.minSaleOfDay = 0\n    //     this.prescriptionsSalespercentage = 0\n    //     this.NonprescriptionsSalespercentage = 0\n    //     this.totalSalePercentage = 0\n    //     this.totalNonSalePercentage = 0\n    //     this.totalPrescriptions = 0\n    //     this.totalSales = 0\n    //     this.totalSalesAmount = 0\n    //     this.totalConversion = 0\n    //     this.totalSalesPerPres = 0\n    //     this.totalSalesWalkin = 0\n    //     this.totalProfit = 0\n    //     this.totalSalesDoctorPlusWalkin = 0\n    //     this.otherSalesPercent = 0\n    //     this.totalSalesOtherPercent = 0\n    //     this.totalSalesPerPresPercent = 0\n    //     this.maxSaleInADay = 0\n    //     this.totalWalkinProfit = 0\n    //     this.maxCollectionDate = 0\n    //     this.minCollectionDate = 0\n    //     this.maxOrderOfDay = 0\n    //     this.minOrderOfDay = 0\n    //     this.minOrderDate = 0\n    //     this.maxOrderDate = 0\n    //     this.dateDiff = 0\n    //     this.totalMale = 0\n    //     this.totalFemale = 0\n    //     this.totalMalePercentage = 0\n    //     this.totalFemalePercentage = 0\n    //     this.totalWalkInPatientsbyDoc = 0\n    //     this.totalAppointmentPatients = 0\n    //     this.totalEmergencyPatients = 0\n    //     this.totalWalkInPatientsbyDocPercentage = 0\n    //     this.totalAppointmentPatientsPercentage = 0\n    //     this.totalEmergencyPatientsPercentage = 0\n    //     this.avgAge = 0\n    //     this.newPatient = 0\n    //     this.prescriptionArray = []\n    //     this.totalSalesArray = []\n    //     this.standaloneArray = []\n    //     this.totalCashAmount = 0\n    //     this.totalOnlineAmount = 0\n    //     this.totalWalkinCashAmount = 0\n    //     this.totalWalkinOnlineAmount = 0\n    //     this.prescriptionOrdersArray = []\n    //     this.totalSalesOrdersArray = []\n    //     this.standaloneOrdersArray = []\n    //     this.totalPrecOrdersPercentage = 0\n    //     this.totalOthersOrdersPercentage = 0\n    //     var object\n    //     object = {}\n    //     object.start_date = this.fromDate1\n    //     object.end_date = this.toDate1\n    //     object.doctm_clinic_id = this.doctorData.doctm_clinic_id\n    //     console.log(object)\n    //     if (new Date(this.toDate1).setHours(0, 0, 0, 0) >= new Date(this.newDate).setHours(0, 0, 0, 0)) {\n        //         this.toastr.warning(\"Invalid date selected\", \"Warning\")\n        //         return\n        //     }\n        //     if (new Date(this.fromDate1).setHours(0, 0, 0, 0) !> new Date(this.toDate1).setHours(0, 0, 0, 0)) {\n            //         this.toastr.warning(\"Invalid date selected\", \"Warning\")\n            //         return\n            //     }\n            //     this.loading = true\n            //     this.userService.DiagnosticsAnalytics(object).subscribe((result) => {\n                //         console.log(result)\n                //         if (result.response) {\n                    //             var walkinTrue = []\n                    //             var walkinFalse = []\n                    //             for (var i = 0; i < result.data1.length; i++) {\n                        //                 if(result.data1[i].walkin_patient){\n                            //                     walkinTrue.push(result.data1[i])\n                            //                 }else{\n                                //                     walkinFalse.push(result.data1[i])\n                                //                 }\n                                //             }\n                                //             var maxInData = []\n                                //             var maxArray = []\n                                //             var maxProfit = []\n                                //             var maxOrder = []\n                                //             var age = 0\n                                //             var latestArray\n                                //             this.doctorArray = result.dataDoctors\n                                //             var total_sales_length = 0\n                                //             for (var i = 0; i < result.data.length; i++) {\n                                    //                 this.totalPatient = result.data.length\n                                    //                 for (var j = 0; j < result.data[i].total_sales.length; j++) {\n                                        //                     if (result.data[i].total_sales[j].diagnostics == true) {\n                                            //                         this.totalPharmacySalesLength++\n                                            //                         this.totalPharmacySales += result.data[i].total_sales[j].investigation_cost\n                                            //                         maxInData.push(result.data[i].total_sales[j].investigation_cost)\n                                            //                         maxArray.push(this.datePipe.transform(result.data[i].total_sales[j].createdAt, 'yyyy-MM-dd'))\n                                            //                         total_sales_length++\n                                            //                         if (result.data[i].total_sales[j].payment_mode_diagnostics == 'Cash') {\n                                                //                             this.totalCashAmount += result.data[i].total_sales[j].investigation_cost\n                                                //                             this.totalWalkinCashPatient++\n                                                //                         } else {\n                                                    //                             this.totalOnlineAmount += result.data[i].total_sales[j].investigation_cost\n                                                    //                             this.totalWalkinOnlinePatient++\n                                                    //                         }\n                                                    //                         if (result.data[i].total_sales[j].registration.age) {\n                                                        //                             age += result.data[i].total_sales[j].registration.age\n                                                        //                         }\n                                                        //                         if (result.data[i].total_sales[j].registration.lastVisit.status == false) {\n                                                            //                             this.newPatient++\n                                                            //                         }\n                                                            //                     }\n                                                            //                 }\n                                                            //                 maxOrder.push(result.data[i].total_sales.length)\n                                                            //             }\n                                                            //             for (var i = 0; i < walkinTrue.length; i++) {\n                                                                //                 this.totalWalkinPatient = walkinTrue.length\n                                                                //                 this.totalWalkinSales += walkinTrue[i].total_amount\n                                                                //                 maxProfit.push(walkinTrue[i].total_amount - walkinTrue[i].cost_amount)\n                                                                //                 maxInData.push(walkinTrue[i].total_amount)\n                                                                //                 maxArray.push(this.datePipe.transform(walkinTrue[i].createdAt, 'yyyy-MM-dd'))\n                                                                //                 maxOrder.push(walkinTrue.length)\n                                                                //                 if (walkinTrue[i].payment_mode == 'Cash') {\n                                                                    //                     this.totalWalkinCashAmount += walkinTrue[i].total_amount\n                                                                    //                     this.totalWalkinCashPatient++\n                                                                    //                 } else {\n                                                                        //                     this.totalWalkinOnlineAmount += walkinTrue[i].total_amount\n                                                                        //                     this.totalWalkinOnlinePatient++\n                                                                        //                 }\n                                                                        //             }\n                                                                        //             var diff = Math.abs(this.toDate.getTime() - this.fromDate.getTime());\n                                                                        //             this.dateDiff = Math.trunc(diff / (1000 * 3600 * 24)) + 1;\n                                                                        //             this.totalWalkinCashPatient = (this.totalWalkinCashPatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                                                                        //             this.totalWalkinOnlinePatient = (this.totalWalkinOnlinePatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                                                                        //             this.totalPrecOrdersPercentage = (this.totalPharmacySalesLength * 100) / (total_sales_length + this.totalWalkinPatient)\n                                                                        //             this.totalOthersOrdersPercentage = (this.totalWalkinPatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                                                                        //             this.prescriptionsSalespercentage = (this.totalPharmacySales / (this.totalPharmacySales + this.totalWalkinSales)) * 100\n                                                                        //             this.NonprescriptionsSalespercentage = (this.totalWalkinSales / (this.totalPharmacySales + this.totalWalkinSales)) * 100\n                                                                        //             this.totalSalePercentage = (this.totalPharmacySalesLength / (this.totalPharmacySalesLength + this.totalWalkinPatient)) * 100\n                                                                        //             this.totalNonSalePercentage = (this.totalWalkinPatient / (this.totalPharmacySalesLength + this.totalWalkinPatient)) * 100\n                                                                        //             this.dataArray = result.data\n                                                                        //             this.otherSales = walkinTrue\n                                                                        //             for (var i = 0; i < this.dataArray.length; i++) {\n                                                                            //                 this.dataArray[i].true_sales = []\n                                                                            //                 this.dataArray[i].false_sales = []\n                                                                            //                 this.dataArray[i].total_sales_amount = 0\n                                                                            //                 this.dataArray[i].sales_per_pres = 0\n                                                                            //                 this.dataArray[i].orderPercentage = 0\n                                                                            //                 for (var j = 0; j < this.dataArray[i].total_sales.length; j++) {\n                                                                                //                     if (this.dataArray[i].total_sales[j].diagnostics) {\n                                                                                    //                         this.dataArray[i].total_sales_amount = this.dataArray[i].total_sales_amount + this.dataArray[i].total_sales[j].investigation_cost\n\n                                                                                    //                         this.dataArray[i].true_sales.push(this.dataArray[i].total_sales[j])\n                                                                                    //                     } else {\n                                                                                        //                         this.dataArray[i].false_sales.push(this.dataArray[i].total_sales[j])\n                                                                                        //                     }\n                                                                                        //                 }\n                                                                                        //                 this.dataArray[i].conversion = this.dataArray[i].true_sales.length\n                                                                                        //                 //this.dataArray[i].conversion = this.getData((this.dataArray[i].true_sales.length * 100) / this.dataArray[i].total_sales.length)\n                                                                                        //                 if (this.dataArray[i].true_sales.length > 0) {\n                                                                                            //                     this.dataArray[i].sales_per_pres = parseFloat(this.getData(this.dataArray[i].total_sales_amount / this.dataArray[i].true_sales.length))\n                                                                                            //                 }\n                                                                                            //             }\n\n                                                                                            //             for (var i = 0; i < this.dataArray.length; i++) {\n                                                                                                //                 this.dataArray[i].orderPercentage = (this.dataArray[i].true_sales.length * 100) / this.totalPharmacySalesLength\n                                                                                                //                 this.totalPrescriptions = this.totalPrescriptions + this.dataArray[i].total_sales.length\n                                                                                                //                 this.totalSales = this.totalSales + this.dataArray[i].true_sales.length\n                                                                                                //                 this.totalSalesAmount = this.totalSalesAmount + this.dataArray[i].total_sales_amount\n                                                                                                //             }\n                                                                                                //             this.totalConversion = this.getData((this.totalSales * 100) / this.totalPrescriptions)\n                                                                                                //             for (var i = 0; i < walkinTrue.length; i++) {\n                                                                                                    //                 this.totalSalesWalkin = this.totalSalesWalkin + walkinTrue[i].total_amount\n                                                                                                    //             }\n                                                                                                    //             this.totalSalesDoctorPlusWalkin = this.getData(this.totalSalesAmount + this.totalSalesWalkin)\n                                                                                                    //             if (this.doctorArray.length > this.dataArray.length) {\n                                                                                                        //                 for (var i = 0; i < this.doctorArray.length; i++) {\n                                                                                                            //                     var boolean = false\n                                                                                                            //                     for (var j = 0; j < this.dataArray.length; j++) {\n                                                                                                                //                         if (this.doctorArray[i]._id.toString() == this.dataArray[j]._id.toString()) {\n                                                                                                                    //                             boolean = true\n                                                                                                                    //                             break\n                                                                                                                    //                         }\n                                                                                                                    //                     }\n                                                                                                                    //                     if (boolean == false) {\n                                                                                                                        //                         this.dataArray.push({\n                                                                                                                            //                             _id: this.doctorArray[i]._id,\n                                                                                                                            //                             total_sales: [],\n                                                                                                                            //                             true_sales: [],\n                                                                                                                            //                             total_sales_amount: 0,\n                                                                                                                            //                             conversion: 0,\n                                                                                                                            //                             sales_per_pres: 0\n                                                                                                                            //                         })\n                                                                                                                            //                     }\n                                                                                                                            //                 }\n                                                                                                                            //             }\n                                                                                                                            //             this.totalSales = this.totalSales + this.otherSales.length\n                                                                                                                            //             for (var i = 0; i < this.dataArray.length; i++) {\n                                                                                                                                //                 this.dataArray[i].totalPrescriptionsPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].total_sales.length, this.totalPrescriptions)))\n                                                                                                                                //                 this.dataArray[i].trueSalesPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].true_sales.length, this.totalSales)))\n                                                                                                                                //                 this.dataArray[i].trueSalesAmtPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].total_sales_amount, this.totalSalesDoctorPlusWalkin)))\n                                                                                                                                //             }\n                                                                                                                                //             this.otherSalesPercent = this.getData(this.checkIsNan(this.getPercentage(this.otherSales.length, this.totalSales)))\n                                                                                                                                //             this.totalSalesOtherPercent = this.getData(this.checkIsNan(this.getPercentage(this.totalSalesWalkin, this.totalSalesDoctorPlusWalkin)))\n                                                                                                                                //             this.totalSalesPerPresPercent = this.getData(this.checkIsNan(this.totalSalesWalkin / this.otherSales.length))\n                                                                                                                                //             this.totalSalesPerPres = parseFloat(this.getData(this.totalSalesDoctorPlusWalkin / this.totalSales))\n                                                                                                                                //             var dateArray = []\n                                                                                                                                //             var newMaxArray = []\n                                                                                                                                //             newMaxArray.push(maxArray[0])\n                                                                                                                                //             for (var i = 0; i < maxArray.length; i++) {\n                                                                                                                                    //                 var boolean = false\n                                                                                                                                    //                 for (var j = 0; j < newMaxArray.length; j++) {\n                                                                                                                                        //                     if (maxArray[i] == newMaxArray[j]) {\n                                                                                                                                            //                         boolean = true\n                                                                                                                                            //                         break\n                                                                                                                                            //                     }\n                                                                                                                                            //                 }\n                                                                                                                                            //                 if (boolean == false) {\n                                                                                                                                                //                     newMaxArray.push(maxArray[i])\n                                                                                                                                                //                 }\n                                                                                                                                                //             }\n                                                                                                                                                //             for (var i = 0; i < newMaxArray.length; i++) {\n                                                                                                                                                    //                 var total_prep_amount: number = 0\n                                                                                                                                                    //                 var total_walkin_amount: number = 0\n                                                                                                                                                    //                 var total_prep_orders: number = 0\n                                                                                                                                                    //                 for (var j = 0; j < this.dataArray.length; j++) {\n                                                                                                                                                        //                     for (var k = 0; k < this.dataArray[j].total_sales.length; k++) {\n                                                                                                                                                            //                         if (this.dataArray[j].total_sales[k].diagnostics == true) {\n                                                                                                                                                                //                             if (newMaxArray[i] == this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'yyyy-MM-dd')) {\n                                                                                                                                                                    //                                 total_prep_amount += this.dataArray[j].total_sales[k].investigation_cost\n                                                                                                                                                                    //                                 total_prep_orders++\n                                                                                                                                                                    //                             }\n                                                                                                                                                                    //                         }\n                                                                                                                                                                    //                     }\n                                                                                                                                                                    //                 }\n                                                                                                                                                                    //                 this.prescriptionOrdersArray.push(total_prep_orders)\n                                                                                                                                                                    //                 this.prescriptionArray.push(total_prep_amount)\n                                                                                                                                                                    //                 var total_walkin_orders: number = 0\n                                                                                                                                                                    //                 for (var l = 0; l < this.otherSales.length; l++) {\n                                                                                                                                                                        //                     //total_walkin_orders = (this.otherSales.length)\n                                                                                                                                                                        //                     if (newMaxArray[i] == this.datePipe.transform(this.otherSales[l].createdAt, 'yyyy-MM-dd')) {\n                                                                                                                                                                            //                         total_walkin_amount += this.otherSales[l].total_amount\n                                                                                                                                                                            //                         total_walkin_orders++\n                                                                                                                                                                            //                     }\n                                                                                                                                                                            //                 }\n                                                                                                                                                                            //                 this.standaloneOrdersArray.push(total_walkin_orders)\n                                                                                                                                                                            //                 this.standaloneArray.push(total_walkin_amount)\n                                                                                                                                                                            //                 this.totalSalesArray.push(total_prep_amount + total_walkin_amount)\n                                                                                                                                                                            //                 this.totalSalesOrdersArray.push(total_prep_orders + total_walkin_orders)\n                                                                                                                                                                            //                 dateArray.push(newMaxArray[i])\n                                                                                                                                                                            //             }\n                                                                                                                                                                            //             this.maxSaleOfDay = Math.max(...this.totalSalesArray)\n                                                                                                                                                                            //             this.minSaleOfDay = Math.min(...this.totalSalesArray)\n                                                                                                                                                                            //             var newMaxValue = -1\n                                                                                                                                                                            //             newMaxValue = this.totalSalesArray.findIndex(x => x == this.maxSaleOfDay);\n                                                                                                                                                                            //             this.maxCollectionDate = dateArray[newMaxValue]\n                                                                                                                                                                            //             var newMinValue = -1\n                                                                                                                                                                            //             newMinValue = this.totalSalesArray.findIndex(x => x == this.minSaleOfDay);\n                                                                                                                                                                            //             this.minCollectionDate = dateArray[newMinValue]\n                                                                                                                                                                            //             /////////// set chart detail ///////////////\n                                                                                                                                                                            //             this.lineChartData = [{\n                                                                                                                                                                                //                     data: this.totalSalesArray,\n                                                                                                                                                                                //                     label: 'Total Sales'\n                                                                                                                                                                                //                 },\n                                                                                                                                                                                //             ];\n                                                                                                                                                                                //             var newDateArray11 = []\n                                                                                                                                                                                //             this.datesArray = dateArray\n                                                                                                                                                                                //             this.lineChartLabels = this.datesArray\n                                                                                                                                                                                //             for (var i = 0; i < dateArray.length; i++) {\n                                                                                                                                                                                    //                 newDateArray11.push(dateArray[i])\n                                                                                                                                                                                    //             }\n                                                                                                                                                                                    //             /////////// set chart detail ///////////////\n\n                                                                                                                                                                                    //             /////////////Chart Profit/////////////////////\n                                                                                                                                                                                    //             this.maxOrderOfDay = Math.max(...this.totalSalesOrdersArray)\n                                                                                                                                                                                    //             this.minOrderOfDay = Math.min(...this.totalSalesOrdersArray)\n                                                                                                                                                                                    //             var newMinOrder = -1\n                                                                                                                                                                                    //             newMinOrder = this.totalSalesOrdersArray.findIndex(x => x == this.minOrderOfDay);\n                                                                                                                                                                                    //             this.minOrderDate = dateArray[newMinOrder]\n                                                                                                                                                                                    //             var newMaxOrder = -1\n                                                                                                                                                                                    //             newMaxOrder = this.totalSalesOrdersArray.findIndex(x => x == this.maxOrderOfDay);\n                                                                                                                                                                                    //             this.maxOrderDate = dateArray[newMaxOrder]\n                                                                                                                                                                                    //             this.lineChartData2 = [{\n                                                                                                                                                                                        //                 data: this.totalSalesOrdersArray,label: 'Total Orders'},\n                                                                                                                                                                                        //             ];\n                                                                                                                                                                                        //             this.lineChartLabels2 = dateArray\n                                                                                                                                                                                        //             /////////////////////////// Date Sort Logic //////////////////////\n                                                                                                                                                                                        //             this.sortSales(dateArray, this.totalSalesArray)\n                                                                                                                                                                                        //             this.sortOrders(newDateArray11, this.totalSalesOrdersArray);\n                                                                                                                                                                                        //             ///////////////////////// End sort Logic ////////////////////////\n                                                                                                                                                                                        //         }\n                                                                                                                                                                                        //         this.loading = false\n                                                                                                                                                                                        //     }, err => {\n                                                                                                                                                                                            //         console.log(err)\n                                                                                                                                                                                            //     })\n                                                                                                                                                                                            // }\n                                                                                                                                                                                            getSorted(abc){\n                                                                                                                                                                                                if(abc==1){\n                                                                                                                                                                                                    this.topProfitArray.sort((a, b) => parseInt(b.occurence)-parseInt(a.occurence));\n                                                                                                                                                                                                }else{\n                                                                                                                                                                                                    this.topProfitArray.sort((a, b) => parseInt(b.sales)-parseInt(a.sales));\n                                                                                                                                                                                                }\n                                                                                                                                                                                            }\n                                                                                                                                                                                            getClass(i) {\n                                                                                                                                                                                                if (i == this.activatedtab) {\n                                                                                                                                                                                                    return 'active'\n                                                                                                                                                                                                } else if (i < this.activatedtab) {\n                                                                                                                                                                                                    return 'completed'\n                                                                                                                                                                                                }\n\n                                                                                                                                                                                            }\n                                                                                                                                                                                            getData(data) {\n                                                                                                                                                                                                if (isNaN(data)) {\n                                                                                                                                                                                                    return 0\n                                                                                                                                                                                                } else if (data % 1 != 0) {\n                                                                                                                                                                                                    return data.toFixed(2)\n                                                                                                                                                                                                } else {\n                                                                                                                                                                                                    return data\n                                                                                                                                                                                                }\n                                                                                                                                                                                            }\n\n                                                                                                                                                                                            getDoctorName(id) {\n                                                                                                                                                                                                for (var i = 0; i < this.doctorArray.length; i++) {\n                                                                                                                                                                                                    if (this.doctorArray[i]._id == id) {\n                                                                                                                                                                                                        return (this.doctorArray[i].first_name)\n                                                                                                                                                                                                    }\n                                                                                                                                                                                                }\n                                                                                                                                                                                            }\n                                                                                                                                                                                            checkIsNan(data) {\n                                                                                                                                                                                                if (isNaN(data)) {\n                                                                                                                                                                                                    return 0\n                                                                                                                                                                                                } else {\n                                                                                                                                                                                                    return data\n                                                                                                                                                                                                }\n                                                                                                                                                                                            }\n\n                                                                                                                                                                                            getPercentage(data, total) {\n                                                                                                                                                                                                return ((data * 100) / total)\n                                                                                                                                                                                            }\n\n                                                                                                                                                                                            getDataCeil(data) {\n                                                                                                                                                                                                return Math.ceil(data)\n                                                                                                                                                                                            }\n\n                                                                                                                                                                                            getClassMap(data, i) {\n                                                                                                                                                                                                if (data.outOfStation) {\n                                                                                                                                                                                                    return 'out'\n                                                                                                                                                                                                } else {\n                                                                                                                                                                                                    if (i % 2 == 0) {\n                                                                                                                                                                                                        return 'cstm-tr-3'\n                                                                                                                                                                                                    } else {\n                                                                                                                                                                                                        return 'cstm-tr-3 evn'\n                                                                                                                                                                                                    }\n                                                                                                                                                                                                }\n                                                                                                                                                                                            }\n\n\n                                                                                                                                                                                        }\n\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardProgressDiagnosisComponent } from './dashboard-progress-diagnosis.component'\nimport { DashboardProgressDiagnosisRoutingModule } from './dashboard-progress-diagnosis-routing.module';\nimport { ChartsModule } from 'ng2-charts';\nimport { AngularDateTimePickerModule } from 'angular2-datetimepicker';\n@NgModule({\n\timports: [\n\tCommonModule,\n\tDashboardProgressDiagnosisRoutingModule,\n\tChartsModule,\n\tAngularDateTimePickerModule\n\t],\n\tdeclarations: [DashboardProgressDiagnosisComponent]\n})\nexport class DashboardProgressDiagnosisModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-diagnosis/dashboard-progress-diagnosis.module.ts"],"sourceRoot":"webpack:///"}