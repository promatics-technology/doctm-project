{"version":3,"sources":["D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy-routing.module.ts","D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.component.css","D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.component.html","D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.component.ts","D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.module.ts"],"names":[],"mappings":"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","file":"dashboard-progress-pharmacy.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardProgressPharmacyComponent } from './dashboard-progress-pharmacy.component'\nconst routes: Routes = [\n{\n\t\tpath: '',\n\t\tcomponent: DashboardProgressPharmacyComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardProgressPharmacyRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".tb-1{\\n\\tmargin-bottom: 0px;\\n}\\n.evn{\\n\\tbackground-color:#eff3ef;\\n}\\n.grin{\\n\\tcolor:#38af13;\\n}\\n.red-u{\\n\\tcolor:#ff0000;\\n}\\n.tb-1 h4{\\n\\tmargin: 0px;\\n}\\n.wrap-canavas{\\n\\tfloat: none;\\n\\twidth:100%;\\n}\\n.clr-blue{\\n\\tcolor:#00b0f0;\\n\\tfont-weight: bold;\\n\\tcursor: pointer;\\n}\\n.blu-2{\\n\\tcolor:#1639bf;\\n}\\n.footer-cstm-an{\\n\\tposition: fixed;\\n    float: left;\\n    width: 100%;\\n    bottom: 0;\\n    background:#fff;\\n    color:#000;\\n    border-top: 1px solid #d6d6d6;\\n    padding-top: 8px;\\n    z-index: 99;\\n}\\n.cus-content-wrapper{\\n\\tpadding-top: 0px;\\n}\\n.wrap-height{\\n\\tmin-height:250px;\\n\\tmax-height: 250px;\\n\\tpadding:0px 8px;\\n\\tborder-left: 1px solid #dcdcdc;\\n\\tborder-right:1px solid #dcdcdc;\\n\\toverflow-x: hidden;\\n}\\n.mt-table h3{\\n\\tmargin-top: 0px;\\n}\\n.cstm-tr{\\n\\tbackground-color: #000;\\n\\tcolor:#fff;\\n\\ttext-align: center;\\n}\\n.cstm-tr-2{\\n\\tbackground-color:#d7e4e3;\\n}\\n.cstm-tr-2 td{\\n\\tborder-right:1px solid #bbb; \\n}\\n/*.cstm-tr-2 td:last-child {\\n border-right: none;\\n}*/\\n.cstm-tr-3{\\n\\tborder-bottom:1px solid #bbb; \\n}\\n.cstm-tr-3 td{\\n\\tborder-right:1px solid #bbb; \\n}\\n/*.cstm-tr-3 td:last-child {\\n border-right: none;\\n}*/\\n.cus-sidebar-wrapper .cus-sidebar{\\n\\theight: initial;\\n}\\n.cstm-mg{\\n\\tmargin-top: 5px;\\n}\\n.btn-go{\\n\\tbackground-color: transparent;\\n    border: 1px solid #002160;\\n    margin-bottom: 5px;\\n    min-width: 62%;\\n}\\n.btn-go:hover{\\n    -webkit-transition: 300ms;\\n    transition: 300ms;\\n    background: #98C74F;\\n    border-color: #98C74F;\\n    color: #fff;\\n}\\n.li-cstm a{\\n\\ttext-align: center!important;\\n    background: #000!important;\\n    color: #fff!important;\\n    font-size: 16px!important;\\n    font-weight: inherit!important;\\n    padding: 6px!important;\\n}\\n/*karam@29-1-2019 chocolate day*/\\n.side-bar-cstm{\\n\\tz-index: 99;\\n}\\n.res-tab-2{\\n\\tmax-height: 200px;\\n}\\n.cstm-ul-new li a{\\n\\tbackground-color:transparent;\\n\\tcolor:#000;\\n\\t/*padding:10px 60px;*/\\n\\tcursor: pointer;\\n\\tborder-radius: 0px;\\n\\tborder-bottom: 2px solid transparent; \\n}\\n.cstm-ul-new li{\\n\\twidth:100%;\\n\\ttext-align: center;\\n}\\n.cstm-ul-new li.active a{\\n\\tbackground-color: #e0e0e0;\\n    color: #000;\\n\\tborder-bottom: 2px solid #00b0f0;\\n}\\n.tab-new{\\n\\tmin-height: 450px;\\n    max-height: 450px;\\n    padding: 0px 8px;\\n    border-left: 1px solid #dcdcdc;\\n    border-right: 1px solid #dcdcdc;\\n    overflow-x: hidden;\\n}\\n.clr-blue{\\n    color: #00b0f0;\\n    font-weight: bold;\\n}\\n.tab-new-cstm tr td{\\n\\tfont-size: 10px;\\n}\\n/*karam@30-jan-2019*/\\n/*.tab-new-cstm tr td{\\n\\tfont-size: 10px;\\n}*/\\n.brder-cstm{\\n\\tpadding-bottom: 1px;\\n    margin-bottom: 6px;\\n    border-bottom: 1px solid #a7a7a7;\\n    position: relative;\\n}\\n.brder-cstm::after{\\n\\tcontent: \\\"\\\";\\n    position: absolute;\\n    height: 6px;\\n    width: 12px;\\n    background-color: #ffffff;\\n    top: 41px;\\n    right: -3px;\\n\\t \\n}\\n.cus-sidebar ul{\\n\\tborder:1px solid #a7a7a7;\\n}\\n.can-vas{\\n\\theight:227px!important;\\n}\\n.can-vas-1{\\n\\theight:200px!important;\\n}\\n.tab-new-one tr td{\\n\\tpadding:2px 8px;\\n\\tvertical-align: middle; \\n}\\n.tab-new-one tr td h4{\\n\\tmargin:5px 0px;  \\n}\\n.cstm-heading{\\n  text-align: center;\\n  font-weight: bold;\\n}\\n.brdr-rght{\\n    border-right:1px solid #d6d6d6!important;\\n}\\n.xs-small{\\n\\tfont-size: 75%!important;\\n}\\n.cstm-tab-new tr td{\\n\\tpadding: 5px;\\n}\\n.can-vas{\\n\\theight: 227px!important;\\n}\\n.brdr-rght{\\n\\tborder-right:1px solid #fff;\\n}\\n.modal.fade .modal-dialog {\\n  -webkit-transform: translate3d(0, 100vh, 0);\\n          transform: translate3d(0, 100vh, 0);\\n  -webkit-transition: 700ms;\\n  transition: 700ms;\\n}\\n.modal.in .modal-dialog {\\n  -webkit-transform: translate3d(0, 0, 0);\\n          transform: translate3d(0, 0, 0);\\n  -webkit-transition: 700ms;\\n  transition: 700ms;\\n}\\n.cstm-tr-2{\\n\\tbackground-color:#d7e4e3;\\n}\\n.cstm-tr-2 td{\\n\\tborder-right:1px solid #bbb; \\n}\\n/*.cstm-tr-2 td:last-child {\\n border-right: none;\\n}*/\\n.cstm-tr-3{\\n\\tborder-bottom:1px solid #bbb; \\n}\\n.cstm-tr-3 td{\\n\\tborder-right:1px solid #bbb; \\n}\\n/*.cstm-tr-3 td:last-child {\\n border-right: none;\\n}*/\\n/*.cstm-md-bdy {\\n\\tposition: absolute;\\n\\ttop: -30px;\\n    right: 8px;\\n}*/\\n.modal-body{\\n\\tpadding-top: 1px;\\n\\tpadding-bottom: -1px;\\n}\\n.cus-content-wrapper .cus-content{\\n\\tmargin-left: 0px!important\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.component.css\n// module id = ../../../../../src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.component.css\n// module chunks = dashboard-progress-pharmacy.module","module.exports = \"<div class=\\\"loader-box\\\" *ngIf=\\\"loading\\\">\\n\\t<img src=\\\"./assets/imgs/load.gif\\\" />\\n</div>\\n<div class=\\\"analytics-sec\\\">\\n\\t\\n\\t<div class=\\\"ipd-deatil-sec\\\">\\n\\t<!-- \\t<div class=\\\"md-tab\\\">\\n\\t      \\t\\n\\t      \\t<ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n\\t          \\t<li role=\\\"presentation\\\" class=\\\"active\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-consultation-prescription\\\"> Consultation </a></li>\\n\\t          \\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-pharmacy-detail\\\"> Clinic Services </a></li>\\n\\t      \\t</ul>\\n\\t    </div>\\n\\t-->\\n\\t<div class=\\\"inner-tab\\\">\\n\\t\\t<!-- Nav tabs -->\\n\\t\\t<ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\n\\t\\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress\\\"> Patient </a></li>\\n\\t\\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-time\\\"> Time</a></li>\\n\\t\\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-prescription\\\">Prescription</a></li>\\n\\t\\t\\t<!--li role=\\\"presentation\\\"  class=\\\"active\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-pharmacy\\\"> Pharmacy</a></li>\\n\\t\\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-diagnosis\\\"> Diagnostics </a></li>\\n\\t\\t\\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-ipd\\\"> IPD </a></li-->\\n\\t\\t\\t<li role=\\\"presentation\\\"  class=\\\"active\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-pharmacy\\\" *ngIf=\\\"doctorData.clinic_services.Clinic_Pharmacy==true\\\"> Pharmacy</a></li>\\n\\t          \\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-diagnosis\\\" *ngIf=\\\"doctorData.clinic_services.Clinic_Diagnostics==true\\\"> Diagnostics </a></li>\\n\\t          \\t<li role=\\\"presentation\\\"><a href=\\\"javascript:void(0);\\\" routerLink=\\\"/header-two-layout/dashboard-progress-ipd\\\" *ngIf=\\\"doctorData.clinic_services.Clinic_IPD==true\\\"> IPD </a></li>\\n\\t\\t</ul>\\n\\t</div>\\n\\n\\t<div class=\\\"ipd-body\\\">\\n\\t    \\t<div class=\\\"cus-content-wrapper\\\">\\n\\t    \\t\\t<div class=\\\"cus-content\\\">\\n\\t    \\t\\t\\t<div class=\\\"\\\" class=\\\"\\\">\\n\\t    \\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t    \\t\\t\\t\\t\\t<div class=\\\"col-lg-6 brdr-rght\\\">\\n\\t    \\t\\t\\t\\t\\t\\t<ul class=\\\"nav nav-tabs cstm-ul-new\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t<li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"#home-cstm\\\">PHARMACY DETAILS FOR TODAY</a></li>\\n<!-- \\t    \\t\\t\\t\\t\\t\\t\\t<li><a data-toggle=\\\"tab\\\" href=\\\"#menu1-cstm\\\">Profit</a></li>\\n\\t    \\t\\t\\t\\t\\t\\t\\t<li><a data-toggle=\\\"tab\\\" href=\\\"#menu2-cstm\\\">Orders</a></li> -->\\n\\t    \\t\\t\\t\\t\\t\\t</ul>\\n\\t    \\t\\t\\t\\t\\t\\t<div class=\\\"tab-content\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t<div id=\\\"home-cstm\\\" class=\\\"tab-pane fade in active\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"cstm-pad\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tab-new-one\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"\\\">\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"360px\\\">Total Pharmacy Sales</td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"200px\\\"><b>{{totalPharmacySales+totalWalkinSales}} &nbsp;</b></td>\\n\\t    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Total Prescription</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalPharmacySalesLength+totalWalkinPatient}} &nbsp; <span class=\\\"red-u\\\">(-3)</span></b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"360px\\\">Prescription Sales</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"200px\\\"><b>{{totalPharmacySales}} &nbsp;</b><small class=\\\"xs-small\\\">({{getData(prescriptionsSalespercentage)}})%</small></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"360px\\\">Other Sales</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"200px\\\"><b>{{checkIsNan(totalSalesWalkin)}} &nbsp;</b><small class=\\\"xs-small\\\">({{getData(checkIsNan(getPercentage(totalSalesWalkin,totalSalesDoctorPlusWalkin)))}}%)</small></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr >\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Profit</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(totalProfitPrec+totalWalkinProfit)}}</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"360px\\\">Cash collection</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"200px\\\"><b>{{totalCashAmount+totalWalkinCashAmount}} &nbsp;</b><small class=\\\"xs-small\\\">({{getData(totalWalkinCashPatient)}}%)</small></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"360px\\\">Online collection</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"200px\\\"><b>{{totalOnlineAmount+totalWalkinOnlineAmount}} &nbsp;</b><small class=\\\"xs-small\\\">({{getData(totalWalkinOnlinePatient)}}%)</small></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Total Sale Orders</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalPharmacySalesLength+totalWalkinPatient}}</b><span></span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Prescription Orders</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalPharmacySalesLength}}</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Other Orders</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{totalWalkinPatient}}</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"360px\\\">Avg sale per Order</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"200px\\\"><b>{{getData(totalPharmacySales/totalPharmacySalesLength)}} &nbsp;</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Avg profit per Order</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(totalProfitPrec+totalWalkinProfit/(totalPharmacySalesLength+totalWalkinPatient))}} &nbsp;</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"360px\\\">Top 10 Products (Sale Num.)</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"200px\\\"><span class=\\\"clr-blue\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click) =\\\"getSorted(1)\\\">View</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"360px\\\">Top 10 Products (Sale Value)</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"200px\\\"><span class=\\\"clr-blue\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" (click) =\\\"getSorted(2)\\\">View</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<!-- <div id=\\\"menu1-cstm\\\" class=\\\"tab-pane fade\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"cstm-pad\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tb-1 cstm-tab-new\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Max profit in a day</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(maxProfitOfDay)}} &nbsp; </b><span>({{maxprofitDate | date: 'dd/MM/yyyy'}})</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Min profit in a day</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(minProfitOfDay)}} &nbsp;</b><span>({{minProfitDate | date: 'dd/MM/yyyy'}})</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Avg daily profit</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(totalProfitPrec+totalWalkinProfit/(dateDiff))}} &nbsp;</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Top 10 Products (Max Profit.)</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><span class=\\\"clr-blue\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal2\\\">View</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h5 class=\\\"cstm-heading\\\">PHARMACY PROFIT</h5>     \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"chart-diagnos chart-box wrap-canavas\\\" *ngIf=\\\"!loading\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<canvas baseChart class=\\\"can-vas\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[datasets]=\\\"lineChartData1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"lineChartLabels1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[options]=\\\"lineChartOptions1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[colors]=\\\"lineChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"lineChartLegend1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"lineChartType1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div id=\\\"menu2-cstm\\\" class=\\\"tab-pane fade\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"cstm-pad\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tb-1\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Max order in a day</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(maxOrderOfDay)}} &nbsp;</b> <span>({{maxOrderDate | date: 'dd/MM/yyyy'}})</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Min order in a day</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getData(minOrderOfDay)}} &nbsp;</b><span>({{minOrderDate | date: 'dd/MM/yyyy'}})</span></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"evn\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"350px\\\">Avg daily order</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td width=\\\"5px\\\"><h4><b>:</b></h4></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td><b>{{getDataCeil((totalPharmacySalesLength+totalWalkinPatient)/(dateDiff))}}</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h5 class=\\\"cstm-heading\\\">PHARMACY ORDERS</h5>     \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"chart-diagnos chart-box wrap-canavas\\\" *ngIf=\\\"!loading\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<canvas baseChart class=\\\"can-vas-1\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[datasets]=\\\"lineChartData2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"lineChartLabels2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[options]=\\\"lineChartOptions2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[colors]=\\\"lineChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"lineChartLegend2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"lineChartType2\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div> -->\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<h5 class=\\\"cstm-heading\\\">PHARMACY SALES</h5>     \\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-lg-6\\\">\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"chart-diagnos chart-box wrap-canavas\\\" *ngIf=\\\"!loading\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<canvas baseChart class=\\\"can-vas\\\" \\n\\t\\t\\t\\t\\t\\t\\t\\t[datasets]=\\\"lineChartData\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[labels]=\\\"lineChartLabels\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[options]=\\\"lineChartOptions\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[colors]=\\\"lineChartColors\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[legend]=\\\"lineChartLegend\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t[chartType]=\\\"lineChartType\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartHover)=\\\"chartHovered($event)\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t(chartClick)=\\\"chartClicked($event)\\\"></canvas>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive res-tab-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<table class=\\\"table tb-1 table-bordered tab-new-cstm\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"cstm-tr\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td colspan=\\\"5\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDoctor-wise Break-up\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</h4>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"cstm-tr-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\" width=\\\"80px\\\"><b>Sr no</b></td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDoctor Name\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tSales(Rs.) Contribution\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tOrder contribution\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tAvg. Sale prescription\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</b>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let op of dataArray; let i = index\\\" class=\\\"cstm-tr-3\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\" width=\\\"80px\\\">{{i+1}}</td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tDr. {{getDoctorName(op._id)}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{getData(op.total_sales_amount)}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<small class=\\\"fontsmall\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t({{getData(checkIsNan(getPercentage(op.total_sales_amount,totalSalesDoctorPlusWalkin)))}}%)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{op.conversion}} <small> ({{getData(op.orderPercentage)}}%)</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{op.sales_per_pres}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\" width=\\\"80px\\\">1</td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tOther Sales\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{checkIsNan(totalSalesWalkin)}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<small class=\\\"fontsmall\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t({{getData(checkIsNan(getPercentage(totalSalesWalkin,totalSalesDoctorPlusWalkin)))}}%)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</small>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<!-- <td class=\\\"text-center\\\">{{checkIsNan(totalSalesWalkin)}} <small class='fontsmall'>({{getData(checkIsNan(getPercentage(totalSalesWalkin,totalSalesDoctorPlusWalkin)))}}%)</small></td> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tN.A\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{{getData(checkIsNan(totalSalesWalkin/otherSales.length))}}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\n\\t\\t</div>\\n\\n\\t</div>\\n\\n</div>\\n\\n</div>\\n\\n<div class=\\\"container footer-cstm-an\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-lg-3 text-center\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<p class=\\\"brdr-rght\\\">SALES  : <b>{{getData(totalPharmacySales+totalWalkinSales)}}</b></p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-lg-3 text-center\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<p class=\\\"brdr-rght\\\">PROFIT  : <b>{{getData(totalProfit)}}</b></p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-lg-3 text-center\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<p class=\\\"brdr-rght\\\">CONVERSION : <b>{{checkIsNan(totalConversion)}}%</b></p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"col-lg-3 text-center \\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<p class=\\\"\\\">CURRENT STOCK VALUATION  : <b>360000</b></p>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<!-- Top 10 Products (Sale Num.) -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal\\\" role=\\\"dialog\\\">\\n\\t<div class=\\\"modal-dialog\\\">\\n\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-body cstm-md-bdy\\\">          \\t\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n\\t\\t\\t\\t<div class=\\\"cstm-tab\\\">\\n\\t\\t\\t\\t\\t<table class=\\\"table tb-1 table-bordered\\\">\\n\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"cstm-tr-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" width=\\\"80px\\\"><b>Sr no</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Type</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Name</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Total Sales</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Occurence</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Percentage</b></td>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"{{getClassMap(data,i)}}\\\" *ngFor=\\\"let data of topProfitArray | slice: 0:10;let i = index; \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" width=\\\"80px\\\">{{i+1}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">{{data.type}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{data.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{data.sales}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{data.occurence}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{getData(data.percentage)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t</div>      \\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- Top 10 Products (Max Profit.) -->\\n<div class=\\\"modal fade\\\" id=\\\"myModal2\\\" role=\\\"dialog\\\">\\n\\t<div class=\\\"modal-dialog\\\">\\n\\t\\t<div class=\\\"modal-content\\\">\\n\\t\\t\\t<div class=\\\"modal-body cstm-md-bdy\\\">          \\t\\n\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n\\t\\t\\t\\t<div class=\\\"cstm-tab\\\">\\n\\t\\t\\t\\t\\t<table class=\\\"table tb-1 table-bordered\\\">\\n\\t\\t\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"cstm-tr-2\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" width=\\\"80px\\\"><b>Sr no</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Type</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Name</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Total Profit</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Occurence</b></td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\"><b>Percentage</b></td>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"{{getClassMap(data,i)}}\\\" *ngFor=\\\"let data of topProfitArray | slice: 0:10;let i = index; \\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\" width=\\\"80px\\\">{{i+1}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-left\\\">{{data.type}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{data.name}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{getData(data.profit)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{data.occurence}}</td>\\n\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"text-center\\\">{{getData(data.profitPer)}}</td>\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t\\t</tbody>\\n\\t\\t\\t\\t\\t</table>\\n\\t\\t\\t\\t</div>      \\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.component.html\n// module id = ../../../../../src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.component.html\n// module chunks = dashboard-progress-pharmacy.module","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../providers/user.service';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-dashboard-progress-pharmacy',\n  templateUrl: './dashboard-progress-pharmacy.component.html',\n  styleUrls: ['./dashboard-progress-pharmacy.component.css']\n})\nexport class DashboardProgressPharmacyComponent implements OnInit {\n    doctorData\n    activatedtab\n    totalPatient\n    totalWalkinPatient\n    loading\n    totalWalkinCashPatient: number\n    totalWalkinOnlinePatient: number\n    totalPharmacySales\n    totalWalkinSales\n    totalPharmacySalesLength\n    maxSaleOfDay\n    minSaleOfDay\n    prescriptionsSalespercentage\n    NonprescriptionsSalespercentage\n    totalSalePercentage\n    totalNonSalePercentage\n    doctorArray\n    dataArray\n    otherSales\n    totalProfit\n    totalPrescriptions\n    totalSales\n    totalSalesAmount\n    totalConversion\n    totalSalesWalkin\n    totalSalesDoctorPlusWalkin\n    otherSalesPercent\n    totalSalesOtherPercent\n    totalSalesPerPresPercent\n    totalSalesPerPres\n    totalCashAmount\n    totalOnlineAmount\n    totalWalkinCashAmount\n    totalWalkinOnlineAmount\n    maxSaleInADay\n    totalWalkinProfit\n    maxProfitOfDay\n    minProfitOfDay\n    maxCollectionDate\n    minCollectionDate\n    maxprofitDate\n    minProfitDate\n    maxOrderOfDay\n    minOrderOfDay\n    minOrderDate\n    maxOrderDate\n    dateDiff\n    prescriptionArray\n    totalSalesArray\n    standaloneArray\n    prescriptionProfitArray\n    totalSalesProfitArray\n    standaloneProfitArray\n    prescriptionOrdersArray\n    totalSalesOrdersArray\n    standaloneOrdersArray\n    datesArray\n    topProfitArray\n    totalProfitPrec\n    fromDate = new Date()\n    toDate = new Date()\n    fromDate1 = new Date()\n    toDate1 = new Date()\n    newDate = new Date()\n    finalTimeMinArray\n    fiveMinPatintArray\n    fiveMinArray\n    settings = {\n        bigBanner: true,\n        timePicker: false,\n        format: 'dd-MMM-yyyy',\n        defaultOpen: false\n    }\n    //CHARTS ////////////\n    public lineChartData: Array < any > = [{\n        data: [],\n        label: 'Total Sales'\n    }];\n    public lineChartLabels: Array < any > = [];\n    public lineChartOptions: any = {\n        responsive: true,\n        legend: {\n            display: false,\n        }\n    };\n    public lineChartColors: Array < any > = [{ // grey\n        backgroundColor: 'rgba(148,159,177,0.2)',\n        borderColor: 'rgba(148,159,177,1)',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }, { // dark grey\n        backgroundColor: 'rgba(77,83,96,0.2)',\n        borderColor: 'rgba(77,83,96,1)',\n        pointBackgroundColor: 'rgba(77,83,96,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(77,83,96,1)'\n    }, { // grey\n        backgroundColor: 'rgba(148,159,177,0.2)',\n        borderColor: 'rgba(148,159,177,1)',\n        pointBackgroundColor: 'rgba(148,159,177,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }];\n    public lineChartLegend: boolean = true;\n    public lineChartType: string = 'line';\n    //charts end /////////\n    ////Chart Profit //////////////\n    public lineChartData1: Array < any > = [{\n        data: [],\n        label: 'Total Profit'\n    }];\n    public lineChartLabels1: Array < any > = [];\n    public lineChartOptions1: any = {\n        responsive: true,\n        legend: {\n            display: false,\n        }\n    };\n    public lineChartLegend1: boolean = true;\n    public lineChartType1: string = 'line';\n    //charts end /////////\n    ////Chart Profit //////////////\n    public lineChartData2: Array < any > = [{\n        data: [],\n        label: 'Total Profit'\n    }];\n    public lineChartLabels2: Array < any > = [];\n    public lineChartOptions2: any = {\n        responsive: true,\n        legend: {\n            display: false,\n        }\n    };\n    public lineChartLegend2: boolean = true;\n    public lineChartType2: string = 'line';\n    //charts end ////////2\n    constructor(private userService: UserService, private datePipe: DatePipe, private toastr: ToastrService) {}\n    ngOnInit() {\n        this.doctorData = JSON.parse(localStorage['doctorDetails'])\n        console.log(this.doctorData)\n        this.newDate.setDate(this.newDate.getDate() + 1)\n        this.fromDate1.setDate(this.fromDate1.getDate() - 6)\n        this.activatedtab = 0\n        this.activatetab(1)\n        this.doctorArray = []\n        this.dataArray = []\n        this.otherSales = []\n    }\n    // events\n    public chartClicked(e: any): void {\n        console.log(e);\n    }\n    public chartHovered(e: any): void {\n        console.log(e);\n    }\n    activatetab(i) {\n        this.activatedtab = i\n        var object\n        object = {}\n        var date = new Date()\n        object.doctm_clinic_id = this.doctorData.doctm_clinic_id\n        object.end_date = new Date()\n        this.totalPatient = 0\n        this.totalWalkinPatient = 0\n        this.totalWalkinCashPatient = 0\n        this.totalWalkinOnlinePatient = 0\n        this.totalPharmacySales = 0\n        this.totalWalkinSales = 0\n        this.totalPharmacySalesLength = 0\n        this.maxSaleOfDay = 0\n        this.minSaleOfDay = 0\n        this.prescriptionsSalespercentage = 0\n        this.NonprescriptionsSalespercentage = 0\n        this.totalSalePercentage = 0\n        this.totalNonSalePercentage = 0\n        this.totalPrescriptions = 0\n        this.totalSales = 0\n        this.totalSalesAmount = 0\n        this.totalConversion = 0\n        this.totalSalesPerPres = 0\n        this.totalSalesWalkin = 0\n        this.totalProfit = 0\n        this.totalSalesDoctorPlusWalkin = 0\n        this.otherSalesPercent = 0\n        this.totalSalesOtherPercent = 0\n        this.totalSalesPerPresPercent = 0\n        this.totalCashAmount = 0\n        this.totalOnlineAmount = 0\n        this.totalWalkinCashAmount = 0\n        this.totalWalkinOnlineAmount = 0\n        this.maxSaleInADay = 0\n        this.totalWalkinProfit = 0\n        this.maxProfitOfDay = 0\n        this.minProfitOfDay = 0\n        this.maxOrderOfDay = 0\n        this.minOrderOfDay = 0\n        this.dateDiff = 0\n        this.prescriptionArray = []\n        this.totalSalesArray = []\n        this.standaloneArray = []\n        this.prescriptionProfitArray = []\n        this.totalSalesProfitArray = []\n        this.standaloneProfitArray = []\n        this.prescriptionOrdersArray = []\n        this.totalSalesOrdersArray = []\n        this.standaloneOrdersArray = []\n        this.topProfitArray = []\n        this.totalProfitPrec = 0\n        if (i == 1) {\n            object.start_date = date\n        }\n        // } else if (i == 1) {\n        //     object.start_date = new Date(date.setDate(date.getDate() - 6))\n        // } else if (i == 2) {\n        //     object.start_date = new Date(date.setDate(date.getDate() - 13))\n        // } else if (i == 3) {\n        //     object.start_date = new Date(date.setMonth(date.getMonth() - 1))\n        // } else if (i == 4) {\n        //     object.start_date = new Date(date.setMonth(date.getMonth() - 3))\n        // } else if (i == 5) {\n        //     object.start_date = new Date(date.setMonth(date.getMonth() - 6))\n        // } else if (i == 6) {\n        //     object.start_date = new Date(date.setFullYear(date.getFullYear() - 1))\n        // } else if (i == 7) {\n        //     object.start_date = new Date()\n        //     object.maximum = true\n        // }\n        //console.log(object)\n        this.fromDate = new Date(object.start_date)\n        this.toDate = new Date(object.end_date)\n        this.loading = true\n        this.userService.PharmacyAnalytics(object).subscribe((result) => {\n            console.log(result)\n            if (result.response) {\n                var walkinTrue =[]\n                var walkinFalse = []\n                for (var i = 0; i < result.data1.length; i++) {\n                    if(result.data1[i].walkin_patient){\n                        walkinTrue.push(result.data1[i])\n                    }else{\n                        walkinFalse.push(result.data1[i])\n                    }\n                }\n                var maxInData = []\n                var maxArray = []\n                var maxProfit = []\n                var maxOrder = []\n                var total_sales_length = 0\n                this.doctorArray = result.dataDoctors\n                for (var i = 0; i < result.data.length; i++) {\n                    this.totalPatient = result.data.length\n                    for (var j = 0; j < result.data[i].total_sales.length; j++) {\n                        if (result.data[i].total_sales[j].pharmacy == true) {\n                            this.totalPharmacySales += result.data[i].total_sales[j].pharmacy_sales\n                            this.totalPharmacySalesLength++;\n                            maxInData.push(result.data[i].total_sales[j].pharmacy_sales)\n                            maxArray.push(this.datePipe.transform(result.data[i].total_sales[j].createdAt, 'yyyy-MM-dd'))\n                            this.totalProfitPrec += result.data[i].total_sales[j].pharmacy_sales - result.data[i].total_sales[j].pharmacy_cost\n                            maxProfit.push(result.data[i].total_sales[j].pharmacy_sales - result.data[i].total_sales[j].pharmacy_cost)\n                            total_sales_length++;\n                            if (result.data[i].total_sales[j].payment_mode_pharmacy == 'Cash') {\n                                this.totalCashAmount += result.data[i].total_sales[j].pharmacy_sales\n                                this.totalWalkinCashPatient++;\n                            } else {\n                                this.totalOnlineAmount += result.data[i].total_sales[j].pharmacy_sales\n                                this.totalWalkinOnlinePatient++;\n                            }\n                        }\n                    }\n                    maxOrder.push(result.data[i].total_sales.length)\n                }\n                console.log(walkinTrue)\n                for (var i = 0; i < walkinTrue.length; i++) {\n                    this.totalWalkinPatient = walkinTrue.length\n                    this.totalWalkinSales += walkinTrue[i].total_amount\n                    this.totalWalkinProfit += walkinTrue[i].total_amount - walkinTrue[i].cost_amount\n                    maxProfit.push(walkinTrue[i].total_amount - walkinTrue[i].cost_amount)\n                    maxInData.push(walkinTrue[i].total_amount)\n                    maxArray.push(this.datePipe.transform(walkinTrue[i].createdAt, 'yyyy-MM-dd'))\n                    maxOrder.push(walkinTrue.length)\n                    if (walkinTrue[i].payment_mode == 'Cash') {\n                        this.totalWalkinCashAmount += walkinTrue[i].total_amount\n                        this.totalWalkinCashPatient++;\n                    } else {\n                        this.totalWalkinOnlineAmount += walkinTrue[i].total_amount\n                        this.totalWalkinOnlinePatient++;\n                    }\n                }\n                console.log(this.totalProfitPrec, this.totalWalkinProfit)\n                var diff = Math.abs(this.toDate.getTime() - this.fromDate.getTime());\n                this.dateDiff = Math.trunc(diff / (1000 * 3600 * 24)) + 1;\n                this.totalWalkinOnlinePatient = (this.totalWalkinOnlinePatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                this.totalWalkinCashPatient = (this.totalWalkinCashPatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                this.prescriptionsSalespercentage = (this.totalPharmacySales / (this.totalPharmacySales + this.totalWalkinSales)) * 100\n                this.NonprescriptionsSalespercentage = (this.totalWalkinSales / (this.totalPharmacySales + this.totalWalkinSales)) * 100\n                this.totalSalePercentage = (this.totalPharmacySalesLength / (this.totalPharmacySalesLength + this.totalWalkinPatient)) * 100\n                this.totalNonSalePercentage = (this.totalWalkinPatient / (this.totalPharmacySalesLength + this.totalWalkinPatient)) * 100\n                this.dataArray = result.data\n                this.otherSales = walkinTrue\n                console.log(this.totalPharmacySalesLength)\n                for (var i = 0; i < this.dataArray.length; i++) {\n                    this.dataArray[i].true_sales = []\n                    this.dataArray[i].false_sales = []\n                    this.dataArray[i].total_sales_amount = 0\n                    this.dataArray[i].sales_per_pres = 0\n                    this.dataArray[i].orderPercentage = 0\n                    for (var j = 0; j < this.dataArray[i].total_sales.length; j++) {\n                        if (this.dataArray[i].total_sales[j].pharmacy) {\n                            this.dataArray[i].total_sales_amount = this.dataArray[i].total_sales_amount + this.dataArray[i].total_sales[j].pharmacy_sales\n                            this.totalProfit = this.totalProfit + (this.dataArray[i].total_sales[j].pharmacy_sales - this.dataArray[i].total_sales[j].pharmacy_cost)\n                            this.dataArray[i].true_sales.push(this.dataArray[i].total_sales[j])\n                        } else {\n                            this.dataArray[i].false_sales.push(this.dataArray[i].total_sales[j])\n                        }\n                    }\n                    //  this.dataArray[i].conversion = this.getData((this.dataArray[i].true_sales.length * 100) / this.dataArray[i].total_sales.length)\n                    this.dataArray[i].conversion = this.dataArray[i].true_sales.length\n                    if (this.dataArray[i].true_sales.length > 0) {\n                        this.dataArray[i].sales_per_pres = parseFloat(this.getData(this.dataArray[i].total_sales_amount / this.dataArray[i].true_sales.length))\n                    }\n                }\n                for (var i = 0; i < this.dataArray.length; i++) {\n                    this.dataArray[i].orderPercentage = (this.dataArray[i].true_sales.length * 100) / this.totalPharmacySalesLength\n                    this.totalPrescriptions = this.totalPrescriptions + this.dataArray[i].total_sales.length\n                    this.totalSales = this.totalSales + this.dataArray[i].true_sales.length\n                    this.totalSalesAmount = this.totalSalesAmount + this.dataArray[i].total_sales_amount\n                }\n                // this.totalConversion = this.getData((this.totalSales * 100) / this.totalPrescriptions)\n                // this.totalSalesPerPres = this.totalSalesPerPres + parseFloat(this.getData(this.totalSalesAmount / this.totalSales))\n                //calculate amount for walkin patients//\n                for (var i = 0; i < walkinTrue.length; i++) {\n                    this.totalProfit = this.totalProfit + (walkinTrue[i].total_amount - walkinTrue[i].cost_amount)\n                    this.totalSalesWalkin = this.totalSalesWalkin + walkinTrue[i].total_amount\n                }\n                this.totalSalesDoctorPlusWalkin = this.getData(this.totalSalesAmount + this.totalSalesWalkin)\n                if (this.doctorArray.length > this.dataArray.length) {\n                    for (var i = 0; i < this.doctorArray.length; i++) {\n                        var boolean = false\n                        for (var j = 0; j < this.dataArray.length; j++) {\n                            if (this.doctorArray[i]._id.toString() == this.dataArray[j]._id.toString()) {\n                                boolean = true\n                                break\n                            }\n                        }\n                        if (boolean == false) {\n                            this.dataArray.push({\n                                _id: this.doctorArray[i]._id,\n                                total_sales: [],\n                                true_sales: [],\n                                total_sales_amount: 0,\n                                conversion: 0,\n                                sales_per_pres: 0\n                            })\n                        }\n                    }\n                }\n                this.totalSales = this.totalSales + this.otherSales.length\n                for (var i = 0; i < this.dataArray.length; i++) {\n                    this.dataArray[i].totalPrescriptionsPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].total_sales.length, this.totalPrescriptions)))\n                    this.dataArray[i].trueSalesPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].true_sales.length, this.totalSales)))\n                    this.dataArray[i].trueSalesAmtPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].total_sales_amount, this.totalSalesDoctorPlusWalkin)))\n                }\n                this.otherSalesPercent = this.getData(this.checkIsNan(this.getPercentage(this.otherSales.length, this.totalSales)))\n                this.totalSalesOtherPercent = this.getData(this.checkIsNan(this.getPercentage(this.totalSalesWalkin, this.totalSalesDoctorPlusWalkin)))\n                this.totalSalesPerPresPercent = this.getData(this.checkIsNan(this.totalSalesWalkin / this.otherSales.length))\n                this.totalSalesPerPres = parseFloat(this.getData(this.totalSalesDoctorPlusWalkin / this.totalSales))\n                var dateArray = []\n                var newMaxArray = []\n                newMaxArray.push(maxArray[0])\n                for (var i = 0; i < maxArray.length; i++) {\n                    var boolean = false\n                    for (var j = 0; j < newMaxArray.length; j++) {\n                        if (maxArray[i] == newMaxArray[j]) {\n                            boolean = true\n                            break\n                        }\n                    }\n                    if (boolean == false) {\n                        newMaxArray.push(maxArray[i])\n                    }\n                }\n                for (var i = 0; i < newMaxArray.length; i++) {\n                    var total_prep_amount: number = 0\n                    var total_walkin_amount: number = 0\n                    var total_prep_profit_amount: number = 0\n                    var total_walkin_profit_amount: number = 0\n                    var total_prep_orders: number = 0\n                    for (var j = 0; j < this.dataArray.length; j++) {\n                        for (var k = 0; k < this.dataArray[j].total_sales.length; k++) {\n                            if (this.dataArray[j].total_sales[k].pharmacy == true) {\n                                if (newMaxArray[i] == this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'yyyy-MM-dd')) {\n                                    total_prep_amount += this.dataArray[j].total_sales[k].pharmacy_sales\n                                    total_prep_profit_amount += (this.dataArray[j].total_sales[k].pharmacy_sales - this.dataArray[j].total_sales[k].pharmacy_cost)\n                                    total_prep_orders++\n                                    total_prep_orders = total_prep_orders + 1\n                                }\n                            }\n                        }\n                    }\n                    this.prescriptionOrdersArray.push(total_prep_orders)\n                    this.prescriptionArray.push(total_prep_amount)\n                    this.prescriptionProfitArray.push(total_prep_profit_amount)\n                    var total_walkin_orders: number = 0\n                    for (var l = 0; l < this.otherSales.length; l++) {\n                        //total_walkin_orders = (this.otherSales.length)\n                        if (newMaxArray[i] == this.datePipe.transform(this.otherSales[l].createdAt, 'yyyy-MM-dd')) {\n                            total_walkin_amount += this.otherSales[l].total_amount\n                            total_walkin_profit_amount += (this.otherSales[l].total_amount - this.otherSales[l].cost_amount)\n                            total_walkin_orders++\n                            total_walkin_orders = total_walkin_orders + 1\n\n                        }\n                    }\n                    this.standaloneOrdersArray.push(total_walkin_orders)\n                    this.standaloneArray.push(total_walkin_amount)\n                    this.totalSalesArray.push(total_prep_amount + total_walkin_amount)\n                    this.standaloneProfitArray.push(total_walkin_profit_amount)\n                    this.totalSalesProfitArray.push(total_prep_profit_amount + total_walkin_profit_amount)\n                    this.totalSalesOrdersArray.push(total_prep_orders + total_walkin_orders)\n                    dateArray.push(newMaxArray[i])\n                }\n                this.maxSaleOfDay = Math.max(...this.totalSalesArray)\n                this.minSaleOfDay = Math.min(...this.totalSalesArray)\n                var newMaxValue = -1\n                newMaxValue = this.totalSalesArray.findIndex(x => x == this.maxSaleOfDay);\n                this.maxCollectionDate = newMaxArray[newMaxValue]\n                var newMinValue = -1\n                newMinValue = this.totalSalesArray.findIndex(x => x == this.minSaleOfDay);\n                this.minCollectionDate = newMaxArray[newMinValue]\n                /////////// set chart detail ///////////////\n                this.lineChartData = [{\n                    data: this.totalSalesArray,\n                    label: 'Total Sales'\n                }];\n                this.datesArray = dateArray\n                this.lineChartLabels = this.datesArray\n                /////////// set chart detail ///////////////\n                /////////////Chart Profit/////////////////////\n                this.maxProfitOfDay = Math.max(...this.totalSalesProfitArray)\n                this.minProfitOfDay = Math.min(...this.totalSalesProfitArray)\n                this.maxOrderOfDay = Math.max(...this.totalSalesOrdersArray)\n                this.minOrderOfDay = Math.min(...this.totalSalesOrdersArray)\n                var newMaxProfit = -1\n                newMaxProfit = this.totalSalesProfitArray.findIndex(x => x == this.maxProfitOfDay);\n                this.maxprofitDate = maxArray[newMaxProfit]\n                var newMinProfit = -1\n                newMinProfit = this.totalSalesProfitArray.findIndex(x => x == this.minProfitOfDay);\n                this.minProfitDate = maxArray[newMinProfit]\n                var newMinOrder = -1\n                newMinOrder = this.totalSalesOrdersArray.findIndex(x => x == this.minOrderOfDay);\n                this.minOrderDate = maxArray[newMinOrder]\n                var newMaxOrder = -1\n                newMaxOrder = this.totalSalesOrdersArray.findIndex(x => x == this.maxOrderOfDay);\n                this.maxOrderDate = maxArray[newMaxOrder]\n                this.lineChartData1 = [{\n                    data: this.totalSalesProfitArray,\n                    label: 'Total Profit'\n                }];\n                this.lineChartLabels1 = this.datesArray\n                this.lineChartData2 = [{\n                    data: this.totalSalesOrdersArray,\n                    label: 'Total Orders'\n                }];\n                this.lineChartLabels2 = this.datesArray\n                var profitDateArray = []\n                var orderDateArray = []\n                for (var i = 0; i < dateArray.length; i++) {\n                    profitDateArray.push(dateArray[i])\n                    orderDateArray.push(dateArray[i])\n                }\n                /////////////////////////// Map Date Sort Logic //////////////////////\n                this.sortSales(dateArray, this.totalSalesArray);\n                this.sortProfit(profitDateArray, this.totalSalesProfitArray);\n                this.sortOrder(orderDateArray, this.totalSalesOrdersArray);\n                ///////////////////////// Map End sort Logic //////////////////////// \n\n                //////////////////////////Top 10 Products///////////////////\n                for (var i = 0; i < result.data1.length; i++) {\n                    for (var j = 0; j < result.data1[i].medicines.length; j++) {\n                        for (var k = 0; k < result.data1[i].medicines[j].amount.length; k++) {\n                            var boolean = false\n                            for (var a = 0; a < this.topProfitArray.length; a++) {\n                                if(result.data1[i].medicines[j].opt[k] == this.topProfitArray[a].type &&\n                                    result.data1[i].medicines[j].product[k]==this.topProfitArray[a].name){\n                                    boolean = true\n                                }\n                            }\n                            if (boolean == false) {\n                                this.topProfitArray.push({\n                                    type: result.data1[i].medicines[j].opt[k],\n                                    name: result.data1[i].medicines[j].product[k],\n                                    sales:0,\n                                    occurence: 0,\n                                    percentage: 0,\n                                    profit: 0,\n                                    profitPer: 0 \n                                })\n                            }\n                        }\n                    }\n                }\n                console.log(result.data1)\n                var totalMRP:number = 0\n                var totalPrate:number = 0\n                for (var a = 0; a < this.topProfitArray.length; a++) {\n                    for (var i = 0; i < result.data1.length; i++) {\n                        for (var j = 0; j < result.data1[i].medicines.length; j++) {\n                            for (var k = 0; k < result.data1[i].medicines[j].amount.length; k++) {\n                                if(result.data1[i].medicines[j].opt[k] == this.topProfitArray[a].type &&\n                                    result.data1[i].medicines[j].product[k]==this.topProfitArray[a].name){\n                                    this.topProfitArray[a].occurence++\n                                    this.topProfitArray[a].sales+=result.data1[i].medicines[j].amount[k]\n                                    this.topProfitArray[a].percentage = (this.topProfitArray[a].sales*100)/(this.totalWalkinSales+this.totalPharmacySales)\n                                    totalPrate = (result.data1[i].medicines[j].medicineStock[k].data.p_rate/(result.data1[i].medicines[j].medicineStock[k].data.pack_units*result.data1[i].medicines[j].medicineStock[k].data.pack_quantity))*result.data1[i].medicines[j].quantity[k]\n                                    totalMRP = (result.data1[i].medicines[j].mrp[k])//.data.mrp/(result.data1[i].medicines[j].medicineStock[k].data.pack_units*result.data1[i].medicines[j].medicineStock[k].data.pack_quantity))*result.data1[i].medicines[j].quantity[k]\n                                    this.topProfitArray[a].profit += (totalMRP - totalPrate)\n                                    this.topProfitArray[a].profitPer =(this.topProfitArray[a].profit*100)/(this.totalProfitPrec+this.totalWalkinProfit)\n                                }\n                            }\n                        }\n                    }\n                }             \n                /////////////////////////Top 10 End ///////////////////////\n            }\n            this.getFiveMinData()\n            this.loading = false\n        }, err => {\n            console.log(err)\n        })\n    }\n    getFiveMinData(){\n        this.finalTimeMinArray = []\n        this.fiveMinPatintArray = []\n        this.fiveMinArray = []\n        var localShiftArray = []\n        var ii = localShiftArray[0]\n        for (var i = 0; i < this.doctorData.consultation_schedule.length; i++) {\n            for (var k = 0; k < this.doctorData.consultation_schedule[i].shifts.length; k++) {\n                localShiftArray.push((parseInt(this.doctorData.consultation_schedule[i].shifts[k].fromTime.hour)*60)+parseInt(this.doctorData.consultation_schedule[i].shifts[k].fromTime.minute))\n                localShiftArray.push((parseInt(this.doctorData.consultation_schedule[i].shifts[k].toTime.hour)*60)+parseInt(this.doctorData.consultation_schedule[i].shifts[k].toTime.minute) )\n                this.otherRange((parseInt(this.doctorData.consultation_schedule[i].shifts[k].fromTime.hour)*60)+parseInt(this.doctorData.consultation_schedule[i].shifts[k].fromTime.minute),\n                    (parseInt(this.doctorData.consultation_schedule[i].shifts[k].toTime.hour)*60)+parseInt(this.doctorData.consultation_schedule[i].shifts[k].toTime.minute),\n                    5)\n            }\n        }\n        for (var i = 0; i < this.fiveMinArray.length; i++) {\n            var amount_data = 0\n            for (var j = 0; j < this.dataArray.length; j++) {\n                for (var k = 0; k < this.dataArray[j].total_sales.length; k++) {\n                    if(parseInt(this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'HH'))*60+parseInt(this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'mm'))>this.fiveMinArray[i]&&\n                        parseInt(this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'HH'))*60+parseInt(this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'mm'))<=this.fiveMinArray[i+1]){\n                        amount_data=this.dataArray[j].total_sales[k].pharmacy_sales\n                    }\n                }\n            }\n            for (var l = 0; l < this.otherSales.length; l++) {\n                if(parseInt(this.datePipe.transform(this.otherSales[l].createdAt, 'HH'))*60+parseInt(this.datePipe.transform(this.otherSales[l].createdAt, 'mm'))>this.fiveMinArray[i]&&\n                        parseInt(this.datePipe.transform(this.otherSales[l].createdAt, 'HH'))*60+parseInt(this.datePipe.transform(this.otherSales[l].createdAt, 'mm'))<=this.fiveMinArray[i+1]){\n                        amount_data=this.otherSales[l].total_amount\n                }\n            }\n            this.fiveMinPatintArray.push(amount_data)\n        }\n        for (var i = 0; i < this.fiveMinArray.length; i++) {\n            this.finalTimeMinArray.push(Math.trunc(this.fiveMinArray[i]/60) + \":\" + Math.trunc(this.fiveMinArray[i]%60))\n        }\n        console.log(this.fiveMinPatintArray)\n        console.log(this.finalTimeMinArray)\n        this.lineChartData = [\n            {data: this.fiveMinPatintArray, label: 'Sales'},\n        ]\n        this.lineChartLabels = this.finalTimeMinArray\n    }\n    otherRange(start, end, step) {\n        if (step == undefined) {\n            step = 1;\n        }\n        if (step > 0) {\n            for (var i = start; i <= end; i += step) {\n                 this.fiveMinArray.push(i);\n            }\n        } else {\n            for (var i = start; i >= end; i += step) {\n              this.fiveMinArray.push(i);\n            }\n        }\n         return this.fiveMinArray\n    }\n    getSorted(abc){\n        if(abc==1){\n            this.topProfitArray.sort((a, b) => parseInt(b.occurence)-parseInt(a.occurence));\n        }else if(abc == 2){\n            this.topProfitArray.sort((a, b) => parseInt(b.sales)-parseInt(a.sales));\n        }else{\n            this.topProfitArray.sort((a, b) => parseInt(b.profit)-parseInt(a.profit));\n        }\n\n    }\n    sortSales(a, b) {\n        var swapped;\n        do {\n            swapped = false;\n            for (var i = 0; i < a.length - 1; i++) {\n                if (a[i] > a[i + 1]) {\n                    var temp = a[i];\n                    a[i] = a[i + 1];\n                    a[i + 1] = temp;\n                    var temp = b[i];\n                    b[i] = b[i + 1];\n                    b[i + 1] = temp;\n                    swapped = true;\n                }\n            }\n        } while (swapped);\n        var newDateArray = []\n        for (var i = 0; i < a.length; i++) {\n            newDateArray.push(this.datePipe.transform(a[i], 'dd-MM-yyyy'))\n        }\n        this.lineChartLabels = newDateArray\n    }\n    sortProfit(a, b) {\n        var swapped;\n        do {\n            swapped = false;\n            for (var i = 0; i < a.length - 1; i++) {\n                if (a[i] > a[i + 1]) {\n                    var temp = a[i];\n                    a[i] = a[i + 1];\n                    a[i + 1] = temp;\n                    var temp = b[i];\n                    b[i] = b[i + 1];\n                    b[i + 1] = temp;\n                    swapped = true;\n                }\n            }\n        } while (swapped);\n        var newDateArray1 = []\n        for (var i = 0; i < a.length; i++) {\n            newDateArray1.push(this.datePipe.transform(a[i], 'dd-MM-yyyy'))\n        }\n        this.lineChartLabels1 = newDateArray1\n    }\n    sortOrder(a, b) {\n        var swapped;\n        do {\n            swapped = false;\n            for (var i = 0; i < a.length - 1; i++) {\n                if (a[i] > a[i + 1]) {\n                    var temp = a[i];\n                    a[i] = a[i + 1];\n                    a[i + 1] = temp;\n                    var temp = b[i];\n                    b[i] = b[i + 1];\n                    b[i + 1] = temp;\n                    swapped = true;\n                }\n            }\n        } while (swapped);\n        var newDateArray3 = []\n        for (var i = 0; i < a.length; i++) {\n            newDateArray3.push(this.datePipe.transform(a[i], 'dd-MM-yyyy'))\n        }\n        this.lineChartLabels2 = newDateArray3\n    }\n    go() {\n        this.activatedtab = 0\n        this.totalPatient = 0\n        this.totalWalkinPatient = 0\n        this.totalWalkinCashPatient = 0\n        this.totalWalkinOnlinePatient = 0\n        this.totalPharmacySales = 0\n        this.totalWalkinSales = 0\n        this.totalPharmacySalesLength = 0\n        this.maxSaleOfDay = 0\n        this.minSaleOfDay = 0\n        this.prescriptionsSalespercentage = 0\n        this.NonprescriptionsSalespercentage = 0\n        this.totalSalePercentage = 0\n        this.totalNonSalePercentage = 0\n        this.totalPrescriptions = 0\n        this.totalSales = 0\n        this.totalSalesAmount = 0\n        this.totalConversion = 0\n        this.totalSalesPerPres = 0\n        this.totalSalesWalkin = 0\n        this.totalProfit = 0\n        this.totalSalesDoctorPlusWalkin = 0\n        this.otherSalesPercent = 0\n        this.totalSalesOtherPercent = 0\n        this.totalSalesPerPresPercent = 0\n        this.totalCashAmount = 0\n        this.totalOnlineAmount = 0\n        this.totalWalkinCashAmount = 0\n        this.totalWalkinOnlineAmount = 0\n        this.maxSaleInADay = 0\n        this.totalWalkinProfit = 0\n        this.maxProfitOfDay = 0\n        this.minProfitOfDay = 0\n        this.maxOrderOfDay = 0\n        this.minOrderOfDay = 0\n        this.dateDiff = 0\n        this.prescriptionArray = []\n        this.totalSalesArray = []\n        this.standaloneArray = []\n        this.prescriptionProfitArray = []\n        this.totalSalesProfitArray = []\n        this.standaloneProfitArray = []\n        this.prescriptionOrdersArray = []\n        this.totalSalesOrdersArray = []\n        this.standaloneOrdersArray = []\n        this.topProfitArray = []\n        var object\n        object = {}\n        object.start_date = this.fromDate1\n        object.end_date = this.toDate1\n        object.doctm_clinic_id = this.doctorData.doctm_clinic_id\n        if (new Date(this.toDate1).setHours(0, 0, 0, 0) >= new Date(this.newDate).setHours(0, 0, 0, 0)) {\n            this.toastr.warning(\"Invalid date selected\", \"Warning\")\n            return\n        }\n        if (new Date(this.fromDate1).setHours(0, 0, 0, 0) ! > new Date(this.toDate1).setHours(0, 0, 0, 0)) {\n            this.toastr.warning(\"Invalid date selected\", \"Warning\")\n            return\n        }\n        this.loading = true\n        this.userService.PharmacyAnalytics(object).subscribe((result) => {\n            console.log(result)\n            if (result.response) {\n                var walkinTrue =[]\n                var walkinFalse = []\n                for (var i = 0; i < result.data1.length; i++) {\n                    if(result.data1[i].walkin_patient){\n                        walkinTrue.push(result.data1[i])\n                    }else{\n                        walkinFalse.push(result.data1[i])\n                    }\n                }\n                var maxInData = []\n                var maxArray = []\n                var maxProfit = []\n                var maxOrder = []\n                var total_sales_length = 0\n                this.doctorArray = result.dataDoctors\n                for (var i = 0; i < result.data.length; i++) {\n                    this.totalPatient = result.data.length\n                    for (var j = 0; j < result.data[i].total_sales.length; j++) {\n                        if (result.data[i].total_sales[j].pharmacy == true) {\n                            this.totalPharmacySales += result.data[i].total_sales[j].pharmacy_sales\n                            this.totalPharmacySalesLength++;\n                            maxInData.push(result.data[i].total_sales[j].pharmacy_sales)\n                            maxArray.push(this.datePipe.transform(result.data[i].total_sales[j].createdAt, 'yyyy-MM-dd'))\n                            this.totalProfitPrec += result.data[i].total_sales[j].pharmacy_sales - result.data[i].total_sales[j].pharmacy_cost\n                            maxProfit.push(result.data[i].total_sales[j].pharmacy_sales - result.data[i].total_sales[j].pharmacy_cost)\n                            total_sales_length++;\n                            if (result.data[i].total_sales[j].payment_mode_pharmacy == 'Cash') {\n                                this.totalCashAmount += result.data[i].total_sales[j].pharmacy_sales\n                                this.totalWalkinCashPatient++;\n                            } else {\n                                this.totalOnlineAmount += result.data[i].total_sales[j].pharmacy_sales\n                                this.totalWalkinOnlinePatient++;\n                            }\n                        }\n                    }\n                    maxOrder.push(result.data[i].total_sales.length)\n                }\n                console.log(walkinTrue)\n                for (var i = 0; i < walkinTrue.length; i++) {\n                    this.totalWalkinPatient = walkinTrue.length\n                    this.totalWalkinSales += walkinTrue[i].total_amount\n                    this.totalWalkinProfit += walkinTrue[i].total_amount - walkinTrue[i].cost_amount\n                    maxProfit.push(walkinTrue[i].total_amount - walkinTrue[i].cost_amount)\n                    maxInData.push(walkinTrue[i].total_amount)\n                    maxArray.push(this.datePipe.transform(walkinTrue[i].createdAt, 'yyyy-MM-dd'))\n                    maxOrder.push(walkinTrue.length)\n                    if (walkinTrue[i].payment_mode == 'Cash') {\n                        this.totalWalkinCashAmount += walkinTrue[i].total_amount\n                        this.totalWalkinCashPatient++;\n                    } else {\n                        this.totalWalkinOnlineAmount += walkinTrue[i].total_amount\n                        this.totalWalkinOnlinePatient++;\n                    }\n                }\n                console.log(this.totalProfitPrec, this.totalWalkinProfit)\n                var diff = Math.abs(new Date(this.toDate).getTime() - new Date(this.fromDate).getTime());\n                this.dateDiff = Math.trunc(diff / (1000 * 3600 * 24)) + 1;\n                this.totalWalkinOnlinePatient = (this.totalWalkinOnlinePatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                this.totalWalkinCashPatient = (this.totalWalkinCashPatient * 100) / (total_sales_length + this.totalWalkinPatient)\n                this.prescriptionsSalespercentage = (this.totalPharmacySales / (this.totalPharmacySales + this.totalWalkinSales)) * 100\n                this.NonprescriptionsSalespercentage = (this.totalWalkinSales / (this.totalPharmacySales + this.totalWalkinSales)) * 100\n                this.totalSalePercentage = (this.totalPharmacySalesLength / (this.totalPharmacySalesLength + this.totalWalkinPatient)) * 100\n                this.totalNonSalePercentage = (this.totalWalkinPatient / (this.totalPharmacySalesLength + this.totalWalkinPatient)) * 100\n                this.dataArray = result.data\n                this.otherSales = walkinTrue\n                console.log(this.totalPharmacySalesLength)\n                for (var i = 0; i < this.dataArray.length; i++) {\n                    this.dataArray[i].true_sales = []\n                    this.dataArray[i].false_sales = []\n                    this.dataArray[i].total_sales_amount = 0\n                    this.dataArray[i].sales_per_pres = 0\n                    this.dataArray[i].orderPercentage = 0\n                    for (var j = 0; j < this.dataArray[i].total_sales.length; j++) {\n                        if (this.dataArray[i].total_sales[j].pharmacy) {\n                            this.dataArray[i].total_sales_amount = this.dataArray[i].total_sales_amount + this.dataArray[i].total_sales[j].pharmacy_sales\n                            this.totalProfit = this.totalProfit + (this.dataArray[i].total_sales[j].pharmacy_sales - this.dataArray[i].total_sales[j].pharmacy_cost)\n                            this.dataArray[i].true_sales.push(this.dataArray[i].total_sales[j])\n                        } else {\n                            this.dataArray[i].false_sales.push(this.dataArray[i].total_sales[j])\n                        }\n                    }\n                    //  this.dataArray[i].conversion = this.getData((this.dataArray[i].true_sales.length * 100) / this.dataArray[i].total_sales.length)\n                    this.dataArray[i].conversion = this.dataArray[i].true_sales.length\n                    if (this.dataArray[i].true_sales.length > 0) {\n                        this.dataArray[i].sales_per_pres = parseFloat(this.getData(this.dataArray[i].total_sales_amount / this.dataArray[i].true_sales.length))\n                    }\n                }\n                for (var i = 0; i < this.dataArray.length; i++) {\n                    this.dataArray[i].orderPercentage = (this.dataArray[i].true_sales.length * 100) / this.totalPharmacySalesLength\n                    this.totalPrescriptions = this.totalPrescriptions + this.dataArray[i].total_sales.length\n                    this.totalSales = this.totalSales + this.dataArray[i].true_sales.length\n                    this.totalSalesAmount = this.totalSalesAmount + this.dataArray[i].total_sales_amount\n                }\n                // this.totalConversion = this.getData((this.totalSales * 100) / this.totalPrescriptions)\n                // this.totalSalesPerPres = this.totalSalesPerPres + parseFloat(this.getData(this.totalSalesAmount / this.totalSales))\n                //calculate amount for walkin patients//\n                for (var i = 0; i < walkinTrue.length; i++) {\n                    this.totalProfit = this.totalProfit + (walkinTrue[i].total_amount - walkinTrue[i].cost_amount)\n                    this.totalSalesWalkin = this.totalSalesWalkin + walkinTrue[i].total_amount\n                }\n                this.totalSalesDoctorPlusWalkin = this.getData(this.totalSalesAmount + this.totalSalesWalkin)\n                if (this.doctorArray.length > this.dataArray.length) {\n                    for (var i = 0; i < this.doctorArray.length; i++) {\n                        var boolean = false\n                        for (var j = 0; j < this.dataArray.length; j++) {\n                            if (this.doctorArray[i]._id.toString() == this.dataArray[j]._id.toString()) {\n                                boolean = true\n                                break\n                            }\n                        }\n                        if (boolean == false) {\n                            this.dataArray.push({\n                                _id: this.doctorArray[i]._id,\n                                total_sales: [],\n                                true_sales: [],\n                                total_sales_amount: 0,\n                                conversion: 0,\n                                sales_per_pres: 0\n                            })\n                        }\n                    }\n                }\n                this.totalSales = this.totalSales + this.otherSales.length\n                for (var i = 0; i < this.dataArray.length; i++) {\n                    this.dataArray[i].totalPrescriptionsPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].total_sales.length, this.totalPrescriptions)))\n                    this.dataArray[i].trueSalesPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].true_sales.length, this.totalSales)))\n                    this.dataArray[i].trueSalesAmtPercent = this.getData(this.checkIsNan(this.getPercentage(this.dataArray[i].total_sales_amount, this.totalSalesDoctorPlusWalkin)))\n                }\n                this.otherSalesPercent = this.getData(this.checkIsNan(this.getPercentage(this.otherSales.length, this.totalSales)))\n                this.totalSalesOtherPercent = this.getData(this.checkIsNan(this.getPercentage(this.totalSalesWalkin, this.totalSalesDoctorPlusWalkin)))\n                this.totalSalesPerPresPercent = this.getData(this.checkIsNan(this.totalSalesWalkin / this.otherSales.length))\n                this.totalSalesPerPres = parseFloat(this.getData(this.totalSalesDoctorPlusWalkin / this.totalSales))\n                var dateArray = []\n                var newMaxArray = []\n                newMaxArray.push(maxArray[0])\n                for (var i = 0; i < maxArray.length; i++) {\n                    var boolean = false\n                    for (var j = 0; j < newMaxArray.length; j++) {\n                        if (maxArray[i] == newMaxArray[j]) {\n                            boolean = true\n                            break\n                        }\n                    }\n                    if (boolean == false) {\n                        newMaxArray.push(maxArray[i])\n                    }\n                }\n                for (var i = 0; i < newMaxArray.length; i++) {\n                    var total_prep_amount: number = 0\n                    var total_walkin_amount: number = 0\n                    var total_prep_profit_amount: number = 0\n                    var total_walkin_profit_amount: number = 0\n                    var total_prep_orders: number = 0\n                    for (var j = 0; j < this.dataArray.length; j++) {\n                        for (var k = 0; k < this.dataArray[j].total_sales.length; k++) {\n                            if (this.dataArray[j].total_sales[k].pharmacy == true) {\n                                if (newMaxArray[i] == this.datePipe.transform(this.dataArray[j].total_sales[k].createdAt, 'yyyy-MM-dd')) {\n                                    total_prep_amount += this.dataArray[j].total_sales[k].pharmacy_sales\n                                    total_prep_profit_amount += (this.dataArray[j].total_sales[k].pharmacy_sales - this.dataArray[j].total_sales[k].pharmacy_cost)\n                                    total_prep_orders++\n                                    total_prep_orders = total_prep_orders + 1\n                                }\n                            }\n                        }\n                    }\n                    this.prescriptionOrdersArray.push(total_prep_orders)\n                    this.prescriptionArray.push(total_prep_amount)\n                    this.prescriptionProfitArray.push(total_prep_profit_amount)\n                    var total_walkin_orders: number = 0\n                    for (var l = 0; l < this.otherSales.length; l++) {\n                        //total_walkin_orders = (this.otherSales.length)\n                        if (newMaxArray[i] == this.datePipe.transform(this.otherSales[l].createdAt, 'yyyy-MM-dd')) {\n                            total_walkin_amount += this.otherSales[l].total_amount\n                            total_walkin_profit_amount += (this.otherSales[l].total_amount - this.otherSales[l].cost_amount)\n                            total_walkin_orders++\n                            total_walkin_orders = total_walkin_orders + 1\n\n                        }\n                    }\n                    this.standaloneOrdersArray.push(total_walkin_orders)\n                    this.standaloneArray.push(total_walkin_amount)\n                    this.totalSalesArray.push(total_prep_amount + total_walkin_amount)\n                    this.standaloneProfitArray.push(total_walkin_profit_amount)\n                    this.totalSalesProfitArray.push(total_prep_profit_amount + total_walkin_profit_amount)\n                    this.totalSalesOrdersArray.push(total_prep_orders + total_walkin_orders)\n                    dateArray.push(newMaxArray[i])\n                }\n                this.maxSaleOfDay = Math.max(...this.totalSalesArray)\n                this.minSaleOfDay = Math.min(...this.totalSalesArray)\n                var newMaxValue = -1\n                newMaxValue = this.totalSalesArray.findIndex(x => x == this.maxSaleOfDay);\n                this.maxCollectionDate = newMaxArray[newMaxValue]\n                var newMinValue = -1\n                newMinValue = this.totalSalesArray.findIndex(x => x == this.minSaleOfDay);\n                this.minCollectionDate = newMaxArray[newMinValue]\n                /////////// set chart detail ///////////////\n                this.lineChartData = [{\n                    data: this.totalSalesArray,\n                    label: 'Total Sales'\n                }];\n                this.datesArray = dateArray\n                this.lineChartLabels = this.datesArray\n                /////////// set chart detail ///////////////\n                /////////////Chart Profit/////////////////////\n                this.maxProfitOfDay = Math.max(...this.totalSalesProfitArray)\n                this.minProfitOfDay = Math.min(...this.totalSalesProfitArray)\n                this.maxOrderOfDay = Math.max(...this.totalSalesOrdersArray)\n                this.minOrderOfDay = Math.min(...this.totalSalesOrdersArray)\n                var newMaxProfit = -1\n                newMaxProfit = this.totalSalesProfitArray.findIndex(x => x == this.maxProfitOfDay);\n                this.maxprofitDate = maxArray[newMaxProfit]\n                var newMinProfit = -1\n                newMinProfit = this.totalSalesProfitArray.findIndex(x => x == this.minProfitOfDay);\n                this.minProfitDate = maxArray[newMinProfit]\n                var newMinOrder = -1\n                newMinOrder = this.totalSalesOrdersArray.findIndex(x => x == this.minOrderOfDay);\n                this.minOrderDate = maxArray[newMinOrder]\n                var newMaxOrder = -1\n                newMaxOrder = this.totalSalesOrdersArray.findIndex(x => x == this.maxOrderOfDay);\n                this.maxOrderDate = maxArray[newMaxOrder]\n                this.lineChartData1 = [{\n                    data: this.totalSalesProfitArray,\n                    label: 'Total Profit'\n                }];\n                this.lineChartLabels1 = this.datesArray\n                this.lineChartData2 = [{\n                    data: this.totalSalesOrdersArray,\n                    label: 'Total Orders'\n                }];\n                this.lineChartLabels2 = this.datesArray\n                var profitDateArray = []\n                var orderDateArray = []\n                for (var i = 0; i < dateArray.length; i++) {\n                    profitDateArray.push(dateArray[i])\n                    orderDateArray.push(dateArray[i])\n                }\n                /////////////////////////// Map Date Sort Logic //////////////////////\n                this.sortSales(dateArray, this.totalSalesArray);\n                this.sortProfit(profitDateArray, this.totalSalesProfitArray);\n                this.sortOrder(orderDateArray, this.totalSalesOrdersArray);\n                ///////////////////////// Map End sort Logic //////////////////////// \n\n                //////////////////////////Top 10 Products///////////////////\n                for (var i = 0; i < result.data1.length; i++) {\n                    for (var j = 0; j < result.data1[i].medicines.length; j++) {\n                        for (var k = 0; k < result.data1[i].medicines[j].amount.length; k++) {\n                            var boolean = false\n                            for (var a = 0; a < this.topProfitArray.length; a++) {\n                                if(result.data1[i].medicines[j].opt[k] == this.topProfitArray[a].type &&\n                                    result.data1[i].medicines[j].product[k]==this.topProfitArray[a].name){\n                                    boolean = true\n                                }\n                            }\n                            if (boolean == false) {\n                                this.topProfitArray.push({\n                                    type: result.data1[i].medicines[j].opt[k],\n                                    name: result.data1[i].medicines[j].product[k],\n                                    sales:0,\n                                    occurence: 0,\n                                    percentage: 0,\n                                    profit: 0,\n                                    profitPer: 0 \n                                })\n                            }\n                        }\n                    }\n                }\n                console.log(result.data1)\n                var totalMRP:number = 0\n                var totalPrate:number = 0\n                for (var a = 0; a < this.topProfitArray.length; a++) {\n                    for (var i = 0; i < result.data1.length; i++) {\n                        for (var j = 0; j < result.data1[i].medicines.length; j++) {\n                            for (var k = 0; k < result.data1[i].medicines[j].amount.length; k++) {\n                                if(result.data1[i].medicines[j].opt[k] == this.topProfitArray[a].type &&\n                                    result.data1[i].medicines[j].product[k]==this.topProfitArray[a].name){\n                                    this.topProfitArray[a].occurence++\n                                    this.topProfitArray[a].sales+=result.data1[i].medicines[j].amount[k]\n                                    this.topProfitArray[a].percentage = (this.topProfitArray[a].sales*100)/(this.totalWalkinSales+this.totalPharmacySales)\n                                    totalPrate = (result.data1[i].medicines[j].medicineStock[k].data.p_rate/(result.data1[i].medicines[j].medicineStock[k].data.pack_units*result.data1[i].medicines[j].medicineStock[k].data.pack_quantity))*result.data1[i].medicines[j].quantity[k]\n                                    totalMRP = (result.data1[i].medicines[j].mrp[k])//.data.mrp/(result.data1[i].medicines[j].medicineStock[k].data.pack_units*result.data1[i].medicines[j].medicineStock[k].data.pack_quantity))*result.data1[i].medicines[j].quantity[k]\n                                    this.topProfitArray[a].profit += (totalMRP - totalPrate)\n                                    this.topProfitArray[a].profitPer =(this.topProfitArray[a].profit*100)/(this.totalProfitPrec+this.totalWalkinProfit)\n                                }\n                            }\n                        }\n                    }\n                }             \n                /////////////////////////Top 10 End ///////////////////////\n            }\n            this.loading = false\n        }, err => {\n            console.log(err)\n        })\n    }\n    getClass(i) {\n        if (i == this.activatedtab) {\n            return 'active'\n        } else if (i < this.activatedtab) {\n            return 'completed'\n        }\n    }\n    getData(data) {\n        if (isNaN(data)) {\n            return 0\n        } else if (data % 1 != 0) {\n            return data.toFixed(2)\n        } else {\n            return data\n        }\n    }\n    getDoctorName(id) {\n        for (var i = 0; i < this.doctorArray.length; i++) {\n            if (this.doctorArray[i]._id == id) {\n                return (this.doctorArray[i].first_name)\n            }\n        }\n    }\n    checkIsNan(data) {\n        if (isNaN(data)) {\n            return 0\n        } else {\n            return data\n        }\n    }\n    getPercentage(data, total) {\n        return ((data * 100) / total)\n    }\n    getOrderDate(date) {\n        var count: number = 0\n        for (var i = 0; i < this.dataArray.length; i++) {\n            for (var j = 0; j < this.dataArray[i].total_sales.length; j++) {\n                if (new Date(date).setHours(0, 0, 0, 0) == new Date(this.dataArray[i].total_sales[j].createdAt).setHours(0, 0, 0, 0)) {\n                    count++;\n                }\n            }\n        }\n        return count\n    }\n\n    getDataCeil(data) {\n        return Math.ceil(data)\n    }\n    getClassMap(data, i) {\n        if (data.outOfStation) {\n            return 'out'\n        } else {\n            if (i % 2 == 0) {\n                return 'cstm-tr-3'\n            } else {\n                return 'cstm-tr-3 evn'\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardProgressPharmacyComponent } from './dashboard-progress-pharmacy.component'\nimport { DashboardProgressPharmacyRoutingModule } from './dashboard-progress-pharmacy-routing.module';\nimport { ChartsModule } from 'ng2-charts';\nimport { AngularDateTimePickerModule } from 'angular2-datetimepicker';\n@NgModule({\n  imports: [\n    CommonModule,\n    DashboardProgressPharmacyRoutingModule,\n    ChartsModule,\n\tAngularDateTimePickerModule\n  ],\n  declarations: [DashboardProgressPharmacyComponent]\n})\nexport class DashboardProgressPharmacyModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/20-07-2019/doctm-7/src/app/header-two-layout/dashboard-progress-pharmacy/dashboard-progress-pharmacy.module.ts"],"sourceRoot":"webpack:///"}